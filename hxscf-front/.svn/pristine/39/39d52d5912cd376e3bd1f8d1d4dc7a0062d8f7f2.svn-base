<template>
    <div class="template-container">
        <content-wrapper>
            <template slot="title">
                授信通知管理列表
            </template>
            <template slot="extra-btn">
                <renderBtn code="role_manage_add">
                    <el-button class="br-btn" type="primary" @click="onAddOrUpdate('add')">新增</el-button>
                </renderBtn>
            </template>
            <template slot="grid">
                <el-table stripe :data="roleList.list" class="br-table" v-loading="loading">
                    <el-table-column label="授信通知主题" prop="code1"></el-table-column>
                    <el-table-column label="状态" prop="code2" min-width="100" show-overflow-tooltip>
                        <template slot-scope="{row}">
                            <el-tag size="mini" :type="row.code2 == '1' ? 'success': 'danger'">{{ $code("costStatus",row.code2 ) }}</el-tag>
                        </template>
                    </el-table-column>
                    <el-table-column label="创建人" prop="code3"></el-table-column>
                    <el-table-column label="创建时间" prop="code4">
                        <template slot-scope="{row}">
                            {{row.code4 | time}}
                        </template>
                    </el-table-column>
                    <el-table-column label="操作" width="160">
                        <template slot-scope="scope">
                            <renderBtn code="role_manage_dets">
                                <el-button type="text" size="mini" @click="onAddOrUpdate('see',scope.row)">详情</el-button>
                            </renderBtn>
                            <renderBtn code="role_manage_upd">
                                <el-button type="text" size="mini" @click="onAddOrUpdate('edit',scope.row)">编辑</el-button>
                            </renderBtn>
                            <renderBtn code="role_manage_del">
                                <el-button type="text" size="mini" @click="handleStartOrStop(scope.row)">启用</el-button>
                            </renderBtn>
                            <renderBtn code="role_manage_del">
                                <el-button type="text" size="mini" @click="handleStartOrStop(scope.row)">停用</el-button>
                            </renderBtn>

                        </template>
                    </el-table-column>
                </el-table>
                <Pages :pageNum="roleList.pageNum" :pageSize="roleList.pageSize" :total="roleList.total" @changePage="changePageFn" />
                <child-dialog ref="dialog" />
            </template>
        </content-wrapper>
    </div>
</template>

<script lang="ts">
import { Vue, Component } from "vue-property-decorator";
import { namespace } from "vuex-class";
const creditNotice = namespace("creditNotice");
import ContentWrapper from "@/components/ContentWrapper.vue";
import childDialog from "./dialog.vue";
import { Pages } from "@/components";
@Component({
    components: {
        ContentWrapper,
        childDialog,
        Pages,
    },
})
export default class Grid extends Vue {
    @creditNotice.State roleList;
    @creditNotice.Action queryNoticeList;
    @creditNotice.State loading;
    @creditNotice.Action saveSearchDataFN;
    @creditNotice.State searchData;
    @creditNotice.Action queryStartOrStop;

    //新增 编辑 详情
    onAddOrUpdate(handleType, row?: any) {
        let $els = this.$refs["dialog"];
        $els["init"](handleType, row);
    }

    // 启停用
    handleStartOrStop(row) {
        this.queryStartOrStop({
            id: row.id,
        }).then((msg) => {
            this.$message({
                type: "success",
                message: msg,
            });
        });
    }
    changePageFn(val) {
        let params = {
            ...this.searchData,
            pageNum: val.pageNum,
            pageSize: val.pageSize,
        };
        this.queryNoticeList(params);
        this.saveSearchDataFN(params);
    }
}
</script>

<style scoped lang="scss">
</style>
