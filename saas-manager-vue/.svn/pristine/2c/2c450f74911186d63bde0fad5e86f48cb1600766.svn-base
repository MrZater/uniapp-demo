<template>
  <div
    class="register-container"
    :style="{
      backgroundImage: 'url(/images/register_bg.png)',
    }"
  >
    <div class="wrapper">
      <!-- 右侧图片 -->
      <div
        class="left-img"
        :style="{
          backgroundImage: 'url(/images/register_left.png)',
        }"
      >
        <el-image
          class="logo"
          style="width: 200px"
          :src="'/images/medpro/register_logo.png'"
        />
      </div>
      <!-- form表单 -->
      <div class="registerform">
        <el-form
          ref="formRef"
          :model="form"
          :rules="rules"
          class="form"
          label-width="30px"
        >
          <el-image
            class="mobile_logo"
            style="width: 200px"
            :src="'/images/medpro/register_logo.png'"
          />
          <el-form-item style="height: 7%" label-width="110px">
            <h2 class="title">用户注册</h2>
          </el-form-item>
          <el-form-item prop="username">
            <!-- <label slot="label">账号名称</label> -->

            <el-input v-model="form.username" placeholder="请输入账号名称">
              <!-- <i slot="prefix" class="el-icon-user" /> -->

              <i slot="prefix" class="iconfont">&#xe751;</i>
            </el-input>
          </el-form-item>

          <el-form-item prop="email">
            <!-- <label slot="label">注册邮箱</label> -->

            <el-input v-model="form.email" placeholder="请输入注册邮箱">
              <i slot="prefix" class="iconfont">&#xe724;</i>
            </el-input>
          </el-form-item>
          <el-form-item prop="password">
            <!-- <label slot="label">密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码</label> -->
            <el-input
              ref="password"
              v-model="form.password"
              :type="passwordType1"
              placeholder="请输入密码"
            >
              <i slot="prefix" class="iconfont">&#xe639;</i>
              <svg-icon
                slot="suffix"
                class="eye"
                :icon-class="passwordType1 === 'password' ? 'eye' : 'eye-open'"
                @click="changeEye('password')"
              />
            </el-input>
          </el-form-item>
          <el-form-item prop="confirmPassword">
            <!-- <label slot="label">确认密码</label> -->

            <el-input
              ref="confirmPassword"
              v-model="form.confirmPassword"
              :type="passwordType2"
              placeholder="请确认密码"
            >
              <i slot="prefix" class="iconfont">&#xe639;</i>
              <svg-icon
                slot="suffix"
                class="eye"
                :icon-class="passwordType2 === 'password' ? 'eye' : 'eye-open'"
                @click="changeEye('confirmPassword')"
              />
            </el-input>
          </el-form-item>
          <el-form-item prop="company">
            <!-- <label slot="label">公司名称</label> -->

            <el-input
              v-model="form.company"
              type="company"
              placeholder="请输入公司名称"
            >
              <i slot="prefix" class="iconfont">&#xe769;</i>
            </el-input>
          </el-form-item>
          <el-form-item prop="contact">
            <!-- <label slot="label">联&nbsp;&nbsp;系&nbsp;&nbsp;人</label> -->

            <el-input
              v-model="form.contact"
              type="contact"
              placeholder="请输入联系人"
            >
              <i slot="prefix" class="iconfont">&#xe814;</i>
            </el-input>
          </el-form-item>
          <el-form-item prop="mobile">
            <!-- <label slot="label">手机号码</label> -->

            <el-input
              v-model="form.mobile"
              type="mobile"
              placeholder="请输入手机号码"
            >
              <i slot="prefix" class="iconfont">&#xe678;</i>
            </el-input>
          </el-form-item>
          <el-form-item prop="learnWay">
            <!-- <label slot="label">了解途径</label> -->

            <el-select
              v-model="form.learnWay"
              clearable
              style="width: 80%"
              placeholder="请选择了解途径"
            >
              <i slot="prefix" class="iconfont">&#xe77a;</i>

              <el-option
                class="option_item"
                :value="1"
                :label="title + '官网'"
              />
              <el-option
                class="option_item"
                :value="2"
                :label="title + '公众号'"
              />
              <el-option
                class="option_item"
                :value="3"
                :label="title + '商务'"
              />
              <el-option class="option_item" :value="4" label="朋友推荐" />
              <el-option class="option_item" :value="5" label="网络文章" />
              <el-option class="option_item" :value="6" label="其他" />
            </el-select>
          </el-form-item>
          <el-form-item>
            <!-- <label slot="label">主营应用</label> -->

            <el-input
              v-model="form.mainApp"
              type="mainApp"
              placeholder="请输入主营应用"
            >
              <i slot="prefix" class="iconfont">&#xe600;</i>
            </el-input>
          </el-form-item>
          <el-form-item>
            <el-button
              type="primary"
              style="width: 80%; height: 40px; border-radius: 30px"
              :loading="isLoading"
              :disabled="disabled"
              @click="onSubmit('formRef')"
            >
              注册
            </el-button>
          </el-form-item>
          <el-form-item label-width="30px">
            已有账号，
            <router-link style="color: #46a6ff" :to="{ path: '/login' }">
              去登录
            </router-link>
          </el-form-item>
        </el-form>
      </div>
    </div>
  </div>
</template>

<script>
import { register } from '@/api/user.js'
import { Encrypt } from '@/utils/jsencrypt'
export default {
  data() {
    // 是否包含一位数字
    const regNumber = /(?=.*[\d])/
    // 是否包含一位小写字母
    const regLetter = /(?=.*[a-z])/
    // 是否包含一位大写字母
    const regLetters = /(?=.*[A-Z])/
    // 是否包含一位特殊字符
    const regCharacter =
      /(?=.*[`~!@#$%^&*()_\-+=<>?:"{}|,.;'\\[\]·~！@#￥%……&*（）——\-+={}|《》？：“”【】、；‘’，。、])/
    // 校验新密码
    const validatePass = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('新密码不能为空！请重新输入'))
      } else {
        if (value.length > 16) {
          callback(new Error('密码长度不超过16个字符。'))
        } else if (value.length < 8) {
          callback(new Error('密码不低于8位，包含大小字母、数字、特殊符号'))
        } else {
          if (!/^[a-zA-Z\d]{1}/.test(value)) {
            callback(new Error('密码必须以英文大小写字母或数字开头！'))
          } else {
            if (!regNumber.test(value)) {
              callback(
                new Error('密码不低于8位，包含大小字母、数字、特殊符号!')
              )
              // callback(new Error("密码必须包含一位数字!"));
            } else if (!regLetter.test(value)) {
              callback(
                new Error('密码不低于8位，包含大小字母、数字、特殊符号!')
              )
              // callback(new Error("密码必须包含一位小写字母!"));
            } else if (!regLetters.test(value)) {
              callback(
                new Error('密码不低于8位，包含大小字母、数字、特殊符号!')
              )
              // callback(new Error("密码必须包含一位大写字母!"));
            } else if (!regCharacter.test(value)) {
              callback(
                new Error('密码不低于8位，包含大小字母、数字、特殊符号!')
              )
              // callback(new Error("密码必须包含一位特殊字符!"));
            } else {
              callback()
            }
          }
        }
      }
    }
    // 校验确认密码
    const validateConfirm = (rule, value, callback) => {
      if (value === '' && this.form.password !== '') {
        callback(new Error('请输入确认密码'))
        return
      }
      if (value !== this.form.password) {
        callback(new Error('密码确认错误！请重新确认'))
      } else {
        callback()
      }
    }
    const validatorLearnWay = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('请选择了解途径'))
      } else {
        callback()
      }
    }

    return {
      isLoading: false,
      disabled: false,
      form: {
        username: '',
        email: '',
        password: '',
        confirmPassword: '',
        company: '',
        contact: '',
        mobile: '',
        learnWay: '',
        mainApp: '',
        trade: ''
      },
      rules: {
        username: [
          {
            required: true,
            message: '请输入账号名称',
            trigger: 'blur'
          }
        ],

        email: [
          {
            required: true,
            message: '请输入注册邮箱',
            trigger: 'blur'
          },
          {
            message: '邮箱无效',
            trigger: 'blur',
            pattern: /^\w+@[a-z0-9]+\.[a-z]{2,4}$/
          }
        ],
        password: [
          { required: true, trigger: 'blur', validator: validatePass }
        ],
        confirmPassword: [
          { required: true, trigger: 'blur', validator: validateConfirm }
        ],
        company: [
          {
            required: true,
            message: '请输入公司名称',
            trigger: 'blur'
          }
        ],
        contact: [
          {
            required: true,
            message: '请输入联系人',
            trigger: 'blur'
          }
        ],
        mobile: [
          {
            required: true,
            message: '请填写手机号',
            trigger: 'blur'
          },
          {
            message: '手机号无效',
            trigger: 'blur',
            pattern: /^(13\d|14[579]|15[^4\D]|17[^49\D]|18\d)\d{8}$/
          }
        ],
        learnWay: [
          {
            required: true,
            message: '请选择了解途径',
            trigger: 'change',
            validator: validatorLearnWay
          }
        ]
      },
      passwordType1: 'password',
      passwordType2: 'password'
    }
  },
  computed: {
    title() {
      return this.$store.getters.title
    },
    isMedPro() {
      return this.$store.getters.isMedPro
    }
  },
  methods: {
    // 密码是否可见
    changeEye(ref) {
      if (ref == 'password') {
        if (this.passwordType1 == 'password') {
          this.passwordType1 = ''
        } else {
          this.passwordType1 = 'password'
        }
      } else {
        if (this.passwordType2 == 'password') {
          this.passwordType2 = ''
        } else {
          this.passwordType2 = 'password'
        }
      }
      this.$nextTick(() => {
        this.$refs[ref].focus()
      })
    },
    async onSubmit(ref) {
      this.$refs[ref].validate((valid) => {
        if (valid) {
          this.isLoading = true
          this.disabled = true
          let password = Encrypt(this.form.password)
          let confirmPassword = Encrypt(this.form.confirmPassword)
          let form = JSON.parse(JSON.stringify(this.form))
          form.password = password
          form.confirmPassword = confirmPassword
          register(form).then((resp) => {
            if (resp.code !== 200) {
              this.isLoading = false
              this.disabled = false
              return
            }
            this.$message.success('注册成功！')
            this.$router.push('/login')
          })
        }
        this.isLoading = false
        this.disabled = false
      })
    }
  }
}
</script>

<style lang="scss" scoped>
.register-container {
  width: 100%;
  height: 100%;
  overflow: hidden;

  background-repeat: no-repeat;
  background-size: 100%;
  display: flex;
  flex-direction: row-reverse;
  padding-top: 20rem;
  .wrapper {
    width: 80rem;
    height: 50rem;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;
    display: flex;
    justify-content: center;
    overflow: hidden;
    .left-img {
      position: relative;
      margin-top: 12rem;
      margin-left: 7rem;
      width: 50rem;
      height: 50rem;
      background-repeat: no-repeat;
      background-size: 100%;
      .logo {
        z-index: 10000;
        display: inline-block;
        position: absolute;
        top: -100px;
        left: -50px;
      }
    }
    .registerform {
      width: 50rem;
      height: 48rem;
      display: flex;
      padding-right: 10rem;
      align-content: center;
      justify-content: right;
      overflow: hidden;
      .form {
        width: 25rem;
        background-color: rgba(256, 256, 256, 1);

        border-radius: 10px;
        padding-left: 30px;
        margin: 50px 0px 0 20px;
        .title {
          margin-top: 20px;
          font-size: 24px;
        }
        .el-input {
          margin: 0;
          .eye {
            cursor: pointer;
          }
        }
        label {
          display: inline-block;
          width: 60px;
          text-align: center;
        }
        .el-input {
          width: 80%;
        }
      }
    }
  }
}
.el-form-item {
  margin-bottom: 17px;
}
::v-deep .el-input input,
::v-deep .el-select input {
  border: 1px solid #e7e7e7;
  height: 40px;
  font-weight: 600;
}

::v-deep .el-input input::-webkit-input-placeholder,
::v-deep .el-select input::-webkit-input-placeholder {
  color: #5b5c5f;
  font-weight: 400;
}
@font-face {
  font-family: "iconfont"; /* project id 3203638 */
  src: url("?#iefix") format("embedded-opentype"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.woff2") format("woff2"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.woff") format("woff"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.ttf") format("truetype"),
    url("#iconfont") format("svg");
}
.iconfont {
  font-family: "iconfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
  line-height: 42px;
  color: #5b5c5f;
}
.mobile_logo {
  display: none;
}
@media screen and (max-width: 768px) {
  .register-container {
    padding: 0;
    margin: 0;
    width: 100vw;
    background-image: url("")!important;
  }
  .left-img{
    background-image: url('')!important;
  }
  .registerform {
    flex-direction: column;
    width: 100vw;
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    margin-top: -10px;

    .form {
      margin: 0 !important;
      border-radius: 0 !important;
      overflow: scroll;
      height: 120vh;
      width: 100vw!important;
    }
    // .mobile_logo {
    //   display: inline-block;
    //   position: absolute;
    // }
  }
  .left-img {
    display: none;
  }
  .register-container .wrapper {
    width: 100vw;
    height: 2000px;
    position: relative;

    .registerform {
      height: auto;
    }
  }
}
</style>>
