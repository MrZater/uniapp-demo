<template>
  <div class="app-container">
    <div class="filter-container">
      <el-row :gutter="0">
        <!-- 日期 -->
        <el-col :lg="6">
          <el-date-picker
            style="width: 90%"
            v-model="pickerDate"
            type="daterange"
            align="right"
            unlink-panels
            value-format="yyyy-MM-dd"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
            :picker-options="pickerOptions"
          >
          </el-date-picker>
        </el-col>
        <!-- 操作系统 -->
        <el-col :lg="4">
          <el-select
            v-model="query.os"
            class="filter-item"
            placeholder="操作系统"
            clearable
          >
            <el-option label="全部" value="" />
            <el-option label="Android" :value="1" />
            <el-option label="iOS" :value="0" />
          </el-select>
        </el-col>
        <!-- 应用 -->
        <el-col :lg="4">
          <!-- <el-select
            v-model="query.appIds"
            class="filter-item"
            placeholder="应用"
            multiple
            collapse-tags
            filterable
            clearable
          >
            <el-option
              v-for="item in appOptions"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            />
          </el-select> -->
          <CustSelectApp
            :width="500"
            :allData="appOptions"
            @selectListhandle="selectListhandle"
          />
        </el-col>
        <el-col v-if="$store.state.user.roles[0] == 'SUPER_ADMIN'" :lg="4">
          <el-select
            v-model="query.userId"
            class="filter-item"
            placeholder="选择管理员账户"
            clearable
          >
            <el-option
              v-for="item in adminList"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            ></el-option>
          </el-select>
        </el-col>
        <!-- 查询按钮 -->
        <el-col :lg="4">
          <el-button
            v-waves
            class="filter-item"
            type="primary"
            icon="el-icon-search"
            @click="handleGetPager"
            >查询</el-button
          ></el-col
        >
      </el-row>
    </div>
    <div class="body-container">
      <div class="filter-container">
        <el-button
          v-waves
          type="primary"
          icon="el-icon-plus"
          class="filter-item"
          @click="handleAdd"
          >应用</el-button
        >
      </div>
      <el-table
        :key="tableKey"
        v-loading="listLoading"
        :data="list"
        border
        highlight-current-row
      >
        <!-- 应用 -->
        <el-table-column width="300px" fixed label="应用" align="center">
          <template slot-scope="{ row }">
            <div class="app-td-container">
              <div class="app-icon">
                <el-image
                  fit="fill"
                  style="width: 40px; height: 40px; border-radius: 10px"
                  :src="
                    row.iconUrl
                      ? getCreativeUrl(row.iconUrl)
                      : 'https://creative.bxsnews.com/medpro/imgs/app-none.png'
                  "
                />
              </div>
              <div class="app-info-container">
                <div class="app-name">
                  <svg-icon :icon-class="row.os === 1 ? 'android' : 'ios'" />
                  <span>{{ row.name }}</span>
                </div>
                <div class="app-id">
                  <span>ID:{{ row.id }}</span>
                  <el-popover trigger="hover" content="复制ID">
                    <i
                      slot="reference"
                      class="el-icon-copy-document"
                      style="cursor: pointer"
                      @click="copyId(row.id)"
                    />
                  </el-popover>
                </div>
              </div>
            </div>
          </template>
        </el-table-column>
        <!-- 所属账户 -->
        <el-table-column
          v-if="$store.state.user.roles[0] === 'SUPER_ADMIN'"
          width="200px"
          fixed
          label="所述账户"
          align="center"
          prop="userName"
        >
        </el-table-column>
        <!-- 广告位个数 -->
        <el-table-column
          width="100px"
          fixed
          label="广告位数量"
          align="center"
          prop="adPlaceNum"
        >
          <template slot-scope="{ row }">
            <div class="adPlaceNum" @click="linkToPlace(row)">
              <!-- <router-link
                :to="{ path: '/traffic/adplace', query: { appId: row.id } }"
                ><i class="iconfont icon">&#xe61c;</i><span class="hoverNum">{{ row.adPlaceNum }}个</span></router-link
              > -->
              <div class="link">
                <span class="hoverNum">{{ row.adPlaceNum }}个</span>
                <i class="iconfont icon">&#xe642;</i>
              </div>
            </div>
          </template>
        </el-table-column>

        <!-- 操作 -->
        <el-table-column width="300px" fixed label="操作" align="center">
          <template slot-scope="{ row }">
            <el-button
              v-waves
              size="mini"
              type="primary"
              class="filter-item"
              @click="handleAddplace(row)"
              >添加广告位</el-button
            >
            <el-button type="primary" size="mini" @click="handleUpdate(row)">
              编辑
            </el-button>
            <el-button
              v-if="
                $store.state.user.roles[0] == 'SUPER_ADMIN' ||
                $store.state.user.roles[0] == 'ADMIN'
              "
              size="small"
              type="danger"
              @click="handleDelete(row)"
              >删除</el-button
            >
          </template>
        </el-table-column>
        <!-- 收益 -->
        <el-table-column
          label="收益"
          width="200px"
          align="center"
          prop="unitRevenue"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.unitRevenue }}
          </template></el-table-column
        >
        <!-- 预估收益 -->

        <el-table-column
          label="预估收益"
          align="center"
          prop="income"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.income }}
          </template></el-table-column
        >
        <!-- DAU -->
        <el-table-column label="DAU" align="center" prop="dau" width="200">
          <template slot-scope="{ row }">
            {{ row.reportData.dau }}
          </template></el-table-column
        >
        <!-- 人均收益 -->
        <el-table-column
          label="人均收益
"
          align="center"
          prop="arpu"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.arpu }}
          </template></el-table-column
        >
        <!-- 渗透率 -->
        <el-table-column
          label="渗透率"
          align="center"
          prop="permeability"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.permeability }}
          </template></el-table-column
        >
        <!-- 流量请求 -->
        <el-table-column
          label="流量请求"
          align="center"
          prop="request"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.request }}
          </template></el-table-column
        >
        <!-- 流量填充率 -->
        <el-table-column
          label="流量填充率"
          align="center"
          prop="requestFilledRate"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.requestFilledRate }}
          </template></el-table-column
        >
        <!-- 展示率 -->
        <el-table-column
          label="展示率"
          align="center"
          prop="impressRate"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.impressRate }}
          </template></el-table-column
        >
        <!-- 展示/DAU -->
        <el-table-column
          label="展示/DAU"
          align="center"
          prop="aipau"
          width="200"
        >
          <template slot-scope="{ row }">
            {{ row.reportData.aipau }}
          </template></el-table-column
        >
      </el-table>

      <pagination
        v-show="total > 0"
        :total="total"
        :page.sync="query.page"
        :limit.sync="query.limit"
        @pagination="handleGetPager"
      />
    </div>
    <!-- 应用 -->
    <el-dialog
      ref="dialog"
      :title="dialogType === 0 ? '新增' : '编辑'"
      :visible.sync="dialogVisible"
    >
      <el-form
        ref="form"
        :model="temp"
        :rules="rules"
        label-width="100px"
        label-position="left"
      >
        <el-form-item v-if="dialogType === 1" label="应用ID">
          <el-input v-model="temp.id" disabled />
        </el-form-item>
        <el-form-item label="操作系统">
          <el-radio-group v-model="temp.os" :disabled="dialogType === 1">
            <el-radio :label="1">Android</el-radio>
            <el-radio :label="0">iOS</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="应用名称" prop="name">
          <el-input v-model="temp.name" maxlength="30" show-word-limit />
        </el-form-item>
        <el-form-item label="包名" prop="bundle">
          <el-input v-model="temp.bundle" />
        </el-form-item>
        <el-form-item label="下载地址">
          <el-input v-model="temp.downloadUrl" placeholder="选填" />
        </el-form-item>
        <el-form-item label="图标">
          <el-upload
            ref="myUpload"
            :action="uploadUrl"
            :headers="header"
            :multiple="false"
            :on-success="handleLogoSuccess"
            :on-remove="handleLogoRemove"
            accept="image/*"
            list-type="picture-card"
            :limit="1"
          >
            <img v-if="temp.iconUrl" :src="temp.iconUrl" width="100%" />
            <div v-else>
              <i class="el-icon-upload" />
            </div>
          </el-upload>
        </el-form-item>
        <el-form-item label="行业">
          <el-cascader
            v-model="temp.tradeId"
            :props="SetKesDept"
            :options="industry"
          />
        </el-form-item>
        <el-form-item label="状态">
          <el-select v-model="temp.sts" placeholder="请选择广告位">
            <el-option label="运行中" :value="'A'"></el-option>
            <el-option label="已暂停" :value="'S'"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="接入方式">
          <el-select v-model="temp.accessType" placeholder="请选择接入方式">
            <el-option
              v-for="item in accessTypes"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            >
            </el-option>
          </el-select>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="dialogVisible = false">取消</el-button>
        <el-button type="primary" @click="handleSubmitForm">确定</el-button>
      </span>
    </el-dialog>
    <!-- 广告位 -->
    <el-dialog
      ref="dialog"
      :title="'新增'"
      :visible.sync="addplacedialogVisible"
    >
      <el-form
        ref="form"
        :model="addplacetemp"
        :rules="addplacerules"
        label-width="100px"
        label-position="left"
      >
        <el-form-item label="应用" prop="appId">
          <el-select
            v-model="addplacetemp.appId"
            placeholder="请选择应用"
            :disabled="addplacedialogType === 1"
            filterable
          >
            <el-option
              v-for="item in addplaceappOptionsAll"
              :key="item.id"
              :value="item.id"
              :label="item.name"
            >
              <svg-icon :icon-class="item.os === 1 ? 'android' : 'ios'" />
              <span>{{ item.name }}</span>
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="广告位名称" prop="name">
          <el-input
            v-model="addplacetemp.name"
            maxlength="30"
            show-word-limit
          />
        </el-form-item>
        <el-form-item label="广告样式" prop="position">
          <el-select v-model="addplacetemp.position" clearable filterable>
            <el-option
              v-for="item in positionOptions"
              :key="item.id"
              :value="item.id"
              :label="item.name"
            />
          </el-select>
        </el-form-item>
        <el-form-item
          v-if="addplacetemp.position === 1 && $store.getters.skip === 1"
          label="跳过"
        >
          <el-radio-group v-model="addplacetemp.skip">
            <el-radio label="A">开启</el-radio>
            <el-radio label="S">关闭</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item v-if="addplacedialogType === 1" label="启用">
          <el-radio-group v-model="addplacetemp.sts">
            <el-radio label="A">启用</el-radio>
            <el-radio label="S">停止</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item label="素材模板" v-if="isShowCreativeTemplate != -1">
          <!-- <el-input v-model="temp.templateIds" /> -->
          <el-select
            multiple
            v-model="addplacetemp.templateIds"
            placeholder="请选择素材模板"
          >
            <el-option
              v-for="item in materialTempList"
              :key="item.id"
              :value="item.id"
              :label="item.sizeName"
            >
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="备注">
          <el-input v-model="addplacetemp.remark" />
        </el-form-item>
        <el-form-item label="审核状态" v-if="$store.getters.creative === 1">
          <el-switch
            v-model="addplacetemp.auditSts"
            active-value="A"
            inactive-value="S"
            active-color="#13ce66"
            inactive-color="#ff4949"
          />
        </el-form-item>
        <el-form-item label="投放等级" v-if="$store.getters.creative === 1">
          <el-select v-model="addplacetemp.level" placeholder="请选择">
            <el-option
              v-for="item in levelOptions"
              :key="item.id"
              :label="item.name"
              :value="item.id"
            />
          </el-select>
        </el-form-item>
      </el-form>
      <span slot="footer" class="dialog-footer">
        <el-button @click="addplacedialogVisible = false">取消</el-button>
        <el-button type="primary" @click="addplacehandleSubmitForm"
          >确定</el-button
        >
      </span>
    </el-dialog>

    <!-- 删除提示框 -->
    <el-dialog :title="'提示'" :visible.sync="delVisible" width="50%" center>
      <div class="del-dialog-cnt">确认删除</div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="delVisible = false">取消</el-button>
        <el-button type="primary" @click="deleteRow">确认</el-button>
      </span>
    </el-dialog>
    <el-dialog title="账户绑定" :visible.sync="dialogPlatLinkVisible">
      <app-platform :app-id="appId" :linked-show="true" />
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="dialogPlatLinkVisible = false"
          >确认</el-button
        >
      </span>
    </el-dialog>
  </div>
</template>

<script>
import waves from "@/directive/waves";
import { getPositionList } from "@/api/common";
import { addAdplace, updateAdplace } from "@/api/place";

import Pagination from "@/components/Pagination";
import { Message } from "element-ui";
import { getToken } from "@/utils/auth";
import { industrySelect } from "@/api/synthReport";
import {
  addApp,
  getAppList,
  getAppPager,
  updateApp,
  getadminList,
} from "@/api/app";
import { copy } from "@/utils/string";
import request from "@/utils/request";
import AppPlatform from "@/components/Platform";
import CustSelectApp from "@/components/CustSelectApp";

const HTTP_PREFIX = "http://creative.bxsnews.com/material/";
export default {
  name: "App",
  components: { Pagination, AppPlatform, CustSelectApp },
  directives: { waves },
  data() {
    return {
      pickerDate: ["2022-02-14", "2022-02-14"],
      pickerOptions: {
        shortcuts: [
          {
            text: "最近一周",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit("pick", [start, end]);
            },
          },
          {
            text: "最近一个月",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit("pick", [start, end]);
            },
          },
          {
            text: "最近三个月",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
              picker.$emit("pick", [start, end]);
            },
          },
        ],
      },
      query: {
        beginDate: "2022-02-14",
        endDate: "2022-02-14",
        os: null,
        appIds: null,
        page: 0,
        limit: 20,
        userId: "",
      },
      appOptions: [],
      appOptionsAll: [],
      addplaceappOptionsAll: [],
      positionOptions: [],
      isShowCreativeTemplate: -1,
      levelOptions: [
        { id: 1, name: "一级" },
        { id: 2, name: "二级" },
        { id: 3, name: "三级" },
        { id: 4, name: "四级" },
      ],

      tableKey: 0,
      industry: [],
      listLoading: false,
      list: [],
      SetKesDept: {
        value: "id",
        label: "name",
        children: "children",
        emitPath: false,
      },
      accessTypes: [
        { id: 1, name: "api" },
        { id: 0, name: "sdk" },
      ],
      total: 0,
      // 添加应用
      temp: {
        os: 1,
        accessType: "",
        tradeId: "",
      },

      dialogType: 0,
      dialogVisible: false,
      delVisible: false,
      // 添加广告位
      addplacetemp: {
        auditSts: "",
        level: "",
        skip: "S",
      },
      addplacedialogType: 0,
      addplacedialogVisible: false,

      rules: {
        name: [{ required: true, message: "请输入名称", trigger: "blur" }],
        bundle: [{ required: true, message: "请输入包名", trigger: "blur" }],
      },
      addplacerules: {
        appId: [{ required: true, message: "请选择APP", trigger: "change" }],
        name: [{ required: true, message: "请输入名称", trigger: "blur" }],
        position: [
          { required: true, message: "请选择位置", trigger: "change" },
        ],
      },
      uploadUrl: global.UPLOAD_URL,
      header: {
        Authorization: getToken(),
      },
      dialogPlatLinkVisible: false,
      appId: null,
      adminList: [],
    };
  },
  watch: {
    dialogVisible(newValue, oldValue) {
      if (oldValue) {
        this.$nextTick(() => {
          this.$refs.myUpload.clearFiles();
        });
      }
    },
    pickerDate: {
      handler(val) {
        if (val.length > 0) {
          this.query.beginDate = val[0];
          this.query.endDate = val[1];
        }
      },
    },
  },
  created() {
    this.initAppOptions();
    this.handleGetPager();
    this.getIndustrySelect();
    this.initaddplaceAppOptions();
    this.initPositionOptions();
    this.initpickerDate();
    this.getadminList();
  },
  methods: {
    selectListhandle(val) {
      this.query.appIds = val;
    },
    async getadminList() {
      let resp = await getadminList();
      if (resp.code !== 200) return;
      this.adminList = resp.data;
    },
    // 默认昨天数据
    initpickerDate() {
      let time = new Date().getTime() - 1000 * 60 * 60 * 24;
      let year = new Date(time).getFullYear();
      let month = new Date(time).getMonth();
      let day = new Date(time).getDate();

      let str = `${year}-${month < 10 ? "0" + month : month}-${
        day < 10 ? "0" + day : day
      }`;
      this.pickerDate = [str, str];
      this.query.endDate = str;
      this.query.beginDate = str;
    },
    linkToPlace(row) {
      this.$router.push({ path: "/traffic/adplace", query: { appId: row.id } });
    },
    initPositionOptions() {
      getPositionList().then((res) => {
        this.positionOptions = res.data;
      });
    },
    initaddplaceAppOptions() {
      getAppList().then((res) => {
        this.appOptionsAll = res.data;
      });
    },
    initAppOptions() {
      getAppList().then((res) => {
        this.appOptions = this.addplaceappOptionsAll = res.data;
        console.log(res.data, "resp", this.appOptions);
      });
    },
    handleGetPager() {
      getAppPager(this.query).then((res) => {
        this.total = res.data.total;
        this.list = res.data.items;
      });
    },
    async getIndustrySelect() {
      const res = await industrySelect();
      if (res.code != 200) return;
      this.industry = res.data;
    },
    handleAdd() {
      this.dialogType = 0;
      this.temp = { os: 1 };
      this.dialogVisible = true;
    },
    handleAddplace(row) {
      this.addplacedialogType = 0;
      this.addplacetemp = { skip: "S", appId: row.id };
      this.addplacedialogVisible = true;
    },
    handleUpdate(row) {
      this.dialogType = 1;
      this.temp = JSON.parse(JSON.stringify(row));
      this.temp.iconUrl = HTTP_PREFIX + row.iconUrl;
      this.dialogVisible = true;
    },
    // 应用
    handleSubmitForm() {
      let _this = this;
      this.$refs.form.validate(async (valid) => {
        if (valid) {
          if (_this.dialogType === 0) {
            await addApp(_this.temp).then((res) => {
              Message({
                message: res.msg,
                type: "success",
                duration: 5 * 1000,
              });
            });
          } else if (_this.dialogType === 1) {
            await updateApp(_this.temp).then((res) => {
              Message({
                message: res.msg,
                type: "success",
                duration: 5 * 1000,
              });
            });
          }
          _this.dialogVisible = false;
          _this.handleGetPager();
          _this.temp = {};
        }
      });
    },
    addplacehandleSubmitForm() {
      let _this = this;
      this.$refs.form.validate(async (valid) => {
        if (valid) {
          if (_this.addplacedialogType === 0) {
            await addAdplace(_this.addplacetemp).then((res) => {
              Message({
                message: res.msg,
                type: "success",
                duration: 5 * 1000,
              });
            });
          } else if (_this.addplacedialogType === 1) {
            await updateAdplace(_this.addplacetemp).then((res) => {
              Message({
                message: res.msg,
                type: "success",
                duration: 5 * 1000,
              });
            });
          }
          _this.addplacedialogVisible = false;
          _this.handleGetPager();
        }
      });
    },
    handleLogoSuccess(res) {
      this.temp.iconUrl = res.data;
    },
    handleLogoRemove() {
      this.temp.iconUrl = undefined;
    },
    copyId(id) {
      let result = copy(id);
      if (result === false) {
        Message({
          message: "不支持复制",
          type: "error",
          duration: 2 * 1000,
        });
      } else {
        Message({
          message: "复制成功",
          type: "success",
          duration: 2 * 1000,
        });
      }
    },
    getCreativeUrl(url) {
      if (url) {
        return HTTP_PREFIX + url;
      } else {
        return null;
      }
    },
    // 确定删除
    deleteRow() {
      request.delete("/app?id=" + this.permissionId).then((response) => {
        if (response.msg) {
          this.$message.success("删除成功");
          this.delVisible = false;
          this.handleGetPager();
        }
      });
    },
    handleDelete(row) {
      this.delVisible = true;
      this.permissionId = row.id;
    },
    handleAppAccountLink(row) {
      this.appId = row.id;
      this.dialogPlatLinkVisible = true;
    },
  },
};
</script>

<style lang="scss" scoped>
.app-td-container {
  display: flex;
  padding-left: 20px;
  text-align: left;
  .app-icon {
    flex: 40px 0 1;
  }
  .app-info-container {
    flex: 1;
    padding-left: 20px;
    // text-align: center;
  }
}
div.adPlaceNum {
  position: relative;
  height: 100%;
  width: 100%;
  transition: all 0.3s;
  i.icon {
    transition: all 0.3s;
    opacity: 0;
    font-size: 14px;
  }
  span {
    line-height: 50px;
  }
}
div.adPlaceNum:hover {
  font-size: 25px;
  color: rgb(31, 143, 196);
  & span {
    text-decoration: underline;
  }
  & i.icon {
    opacity: 1;
    font-size: 25px;
  }
}
@font-face {
  font-family: "iconfont"; /* project id 3185001 */
  src: url("");
  src: url("?#iefix") format("embedded-opentype"),
    url("//at.alicdn.com/t/font_3185001_y84lcw8slnn.woff2") format("woff2"),
    url("//at.alicdn.com/t/font_3185001_y84lcw8slnn.woff") format("woff"),
    url("//at.alicdn.com/t/font_3185001_y84lcw8slnn.ttf") format("truetype"),
    url("#iconfont") format("svg");
}
</style>
