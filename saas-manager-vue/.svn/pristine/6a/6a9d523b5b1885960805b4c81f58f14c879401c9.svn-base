<template>
  <div>
    <el-card>
      <div class="title">登录用户信息</div>
      <el-form
        label-position="right"
        :model="loginMsgForm"
        :rules="loginMsgRules"
        ref="ruleForm"
        label-width="100px"
      >
      <!-- 账号名称 -->
        <el-form-item label="账号名称" prop="name">
          <el-input v-model="loginMsgForm.name"></el-input>
        </el-form-item>
        <!-- 登录名称 -->
        <el-form-item label="登录名称" prop="region">
          <span>{{ loginMsgForm.loginId }}</span>
        </el-form-item>
        <!-- 权限 -->
        <el-form-item label="权限:" prop="region">
          <span>{{ loginMsgForm.role }}</span>
        </el-form-item>
      </el-form>
      <el-button type="primary" @click="handlEditMsg" style="margin-left: 48%"
        >修改</el-button
      >
    </el-card>
  </div>
</template>
<script>
import { updateAccountInfo } from "@/api/advanced";
import { getInfo } from "@/api/user";


export default {
  data() {
    return {
      loginMsgForm: {
        name: "",
        loginId: "",
        role: "",
        sts: "",
        company: '',
        contact: '',
        mobile: '',
      },
      loginMsgRules: {
        name: [{ required: true, message: "请输入账号名称", trigger: "blur" }],
      },
    };
  },
  mounted() {
    this.getUserMsg();
    this.getInfo()
  },
  methods: {
    async getInfo(){
      let resp = await getInfo()
      if(resp.code!==200)return
      console.log(resp)
    },
    getUserMsg() {
      let roles = this.$store.state.user.roles[0];
      if (roles === "SUPER_ADMIN") {
        roles = "超级管理员";
      } else if (roles === "ADMIN") {
        roles = "管理员";
      } else if (roles === "OPERATOR") {
        roles = "运营";
      } else if (roles === "VIEWER") {
        roles = "报表";
      } else if (roles === "AUDITOR") {
        roles = "审核员";
      } else if (roles === "BUSINESS") {
        roles = "商务";
      } else if (roles === "MEDIA") {
        roles = "媒体";
      }
    
      this.loginMsgForm.loginId = this.$store.state.user.loginId
      this.loginMsgForm.name = this.$store.state.user.username
      this.loginMsgForm.company = this.$store.state.user.company
      this.loginMsgForm.contact = this.$store.state.user.contact

      this.loginMsgForm.role = roles
      

    },

    handlEditMsg() {
      this.$refs["ruleForm"].validate(async (val) => {
        if (!val) return;
        let loginMsgForm = JSON.parse(JSON.stringify(this.loginMsgForm));
        if (loginMsgForm.role === "超级管理员") {
          loginMsgForm.role = 1;
        } else if (loginMsgForm.role === "管理员") {
          loginMsgForm.role = 2;
        } else if (loginMsgForm.role === "运营") {
          loginMsgForm.role = 3;
        } else if (loginMsgForm.role === "报表") {
          loginMsgForm.role = 4;
        } else if (loginMsgForm.role === "审核员") {
          loginMsgForm.role = 5;
        } else if (loginMsgForm.role === "商务") {
          loginMsgForm.role = 6;
        } else if (loginMsgForm.role === "媒体") {
          loginMsgForm.role = 7;
        }

        const res = await updateAccountInfo(loginMsgForm);
        if (res.code != 200) return this.$message.error(res.msg);
        await this.$store.dispatch("user/getInfo");
        this.getUserMsg();
        this.$message.success(res.msg);
      });
    },
    closeDialog() {
      this.$refs["ruleForm"].resetFields();
    },
  },
};
</script>
<style lang="scss" scoped>
.el-card {
  width: 80%;
  margin: 30px auto;
  padding: 0 50px;
  box-sizing: border-box;
  .msg {
    width: 100%;
    // height: 500px;
    // background-color: chocolate;
    .item {
      display: flex;
      align-items: center;
      height: 40px;
      //   background-color: cornflowerblue;
      margin-bottom: 20px;
      text-align: left;
      .item_one {
        width: 100px;
      }
    }
  }
  .title {
    margin-bottom: 50px;
  }
  .row_one {
    display: flex;
    justify-content: center;
    margin-top: 40px;
  }
}
</style>
