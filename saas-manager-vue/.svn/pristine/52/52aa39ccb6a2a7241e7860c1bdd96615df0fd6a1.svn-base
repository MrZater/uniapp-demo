<template>
  <div class="tab-container">
    <!-- welcome -->
    <el-row class="welcome"
      ><el-col
        ><h3>
          欢迎，【{{ welcomeToDescribe.username }}】【{{
            welcomeToDescribe.roleName
          }}】
        </h3></el-col
      ></el-row
    >
    <el-row :gutter="20" class="panel-group">
      <el-col :xs="12" :sm="12" :lg="4" class="card-panel-col">
        <div class="card-panel">
          <div class="card-panel-icon-wrapper icon-today">
            <svg-icon icon-class="money" class-name="card-panel-icon" />
          </div>
          <div class="card-panel-description">
            <div class="card-panel-text">今天预估收益（元）</div>
            <div class="box">{{ income.today }}</div>
            <!-- <count-to :start-val="0" :end-val="income.yesterday" /> -->
          </div>
        </div>
      </el-col>

      <el-col :xs="12" :sm="12" :lg="4" class="card-panel-col">
        <div class="card-panel">
          <div class="card-panel-icon-wrapper icon-yesterday">
            <svg-icon icon-class="money" class-name="card-panel-icon" />
          </div>
          <div class="card-panel-description">
            <div class="card-panel-text">昨天收益（元）</div>
            <div class="box">{{ income.yesterday }}</div>
            <!-- <count-to :start-val="0" :end-val="income.yesterday" /> -->
          </div>
        </div>
      </el-col>
      <el-col :xs="12" :sm="12" :lg="4" class="card-panel-col">
        <div class="card-panel">
          <div class="card-panel-icon-wrapper icon-last-seven-day">
            <svg-icon icon-class="money" class-name="card-panel-icon" />
          </div>
          <div class="card-panel-description">
            <div class="card-panel-text">前天收益（元）</div>
            <div class="box">{{ income.beforeYesterday }}</div>
            <!-- <count-to :start-val="0" :end-val="income.sevenDay" /> -->
          </div>
        </div>
      </el-col>
      <el-col :xs="12" :sm="12" :lg="4" class="card-panel-col">
        <div class="card-panel">
          <div class="card-panel-icon-wrapper icon-month">
            <svg-icon icon-class="money" class-name="card-panel-icon" />
          </div>
          <div class="card-panel-description">
            <div class="card-panel-text">本月累计收益（元）</div>
            <div class="box">{{ income.month }}</div>
            <!-- <count-to :start-val="0" :end-val="income.month" /> -->
          </div>
        </div>
      </el-col>

      <el-col :xs="12" :sm="12" :lg="4" class="card-panel-col">
        <div class="card-panel">
          <div class="card-panel-icon-wrapper icon-all">
            <svg-icon icon-class="money" class-name="card-panel-icon" />
          </div>
          <div class="card-panel-description">
            <div class="card-panel-text">上月累计收益（元）</div>
            <div class="box">{{ income.lastMonth }}</div>
            <!-- <count-to :start-val="0" :end-val="income.all" /> -->
          </div>
        </div>
      </el-col>
    </el-row>

    <!-- 日期 -->
    <el-row :gutter="30">
      <el-col :span="8" style="width: 30%; height: 40px; margintop: 10px">
        <el-date-picker
          style="width: 80%"
          v-model="time"
          :clearable="false"
          class="item"
          type="daterange"
          value-format="yyyy-MM-dd"
          align="right"
          unlink-panels
          range-separator="至"
          start-placeholder="开始日期"
          end-placeholder="结束日期"
          :picker-options="pickerOptions"
          @change="getSTime"
      /></el-col>
      <!-- 商务 -->
      <el-col
        v-if="$store.state.user.roles[0] === 'SUPER_ADMIN'"
        :span="5"
        style="width: 30%; height: 40px; margintop: 10px"
      >
        <el-select
          :disabled="$store.state.user.roles[0] === 'BUSINESS'"
          clearable
          v-model="echartsParams.businessIds[0]"
          placeholder="请选择商务"
          style="width: 80%"
        >
          <el-option
            v-for="item in businessList"
            :key="item.id"
            :label="item.username"
            :value="item.id"
          >
          </el-option>
        </el-select>
      </el-col>

      <!-- 账号 -->
      <el-col
        v-if="
          $store.state.user.roles[0] === 'SUPER_ADMIN' ||
          $store.state.user.roles[0] === 'BUSINESS'
        "
        :span="5"
        style="width: 30%; height: 40px; margintop: 10px"
      >
        <el-select
          v-model="echartsParams.adminUserIds[0]"
          clearable
          placeholder="请选择账号"
          style="width: 80%"
        >
          <el-option
            v-for="item in adminList"
            :key="item.id"
            :label="item.username"
            :value="item.id"
          >
          </el-option>
        </el-select>
      </el-col>

      <!-- 应用1 -->
      <el-col :span="5" style="width: 30%; height: 40px; margintop: 10px">
        <CustSelectApp
          :width="450"
          :allData="departments1"
          @selectListhandle="selectListhandle"
        />
      </el-col>

      <!-- 广告位 -->
      <el-col :span="5" style="width: 30%; height: 40px; margintop: 10px">
        <el-select
          v-model="department2"
          style="width: 80%"
          class="item"
          placeholder="广告位"
          multiple
          collapse-tags
          @change="getSelectDep2"
        >
          <div style="padding-left: 10px">
            <el-radio v-model="echartsParams.placeIdListExclude" :label="1"
              >包括</el-radio
            >
            <el-radio v-model="echartsParams.placeIdListExclude" :label="0"
              >不包括</el-radio
            >
            <el-checkbox
              v-model="checkedThing2"
              :style="selfstyle"
              @change="selectAllThing2"
              >全选</el-checkbox
            >
          </div>
          <el-option
            v-for="(item, index) in departments2"
            :key="index"
            :label="item.name"
            :value="item.id"
          /> </el-select
      ></el-col>

      <!-- 广告样式 -->
      <el-col :span="5" style="width: 30%; height: 40px; margintop: 10px">
        <el-select
          style="width: 80%"
          v-model="echartsParams.positionIdList"
          class="item"
          multiple
          collapse-tags
          placeholder="广告样式"
        >
          <el-option
            v-for="item in options1"
            :key="item.value"
            :label="item.name"
            :value="item.id"
          /> </el-select
      ></el-col>

      <!-- 广告平台-->
      <el-col :span="5" style="width: 30%; height: 40px; margintop: 10px">
        <el-select
          style="width: 80%"
          v-model="department3"
          class="item"
          placeholder="广告源"
          multiple
          collapse-tags
          @change="getSelectDep3"
        >
          <div style="padding-left: 10px">
            <el-radio v-model="echartsParams.platIdListExclude" :label="1"
              >包括</el-radio
            >
            <el-radio v-model="echartsParams.platIdListExclude" :label="0"
              >不包括</el-radio
            >
            <el-checkbox
              v-model="checkedThing3"
              :style="selfstyle"
              @change="selectAllThing3"
              >全选</el-checkbox
            >
          </div>
          <el-option
            v-for="(item, index) in departments3"
            :key="index"
            :label="item.name"
            :value="item.id"
          /> </el-select
      ></el-col>

      <!-- 系统平台 -->
      <el-col :span="5" style="width: 30%; height: 40px; margintop: 10px">
        <el-select
          style="width: 80%"
          v-model="echartsParams.osIdList"
          class="item"
          multiple
          placeholder="系统平台"
        >
          <el-option
            v-for="item in systemPlatformOptions"
            :key="item.value"
            :label="item.label"
            :value="item.value"
          /> </el-select
      ></el-col>
      <el-col
        :span="24"
        style="width: 100%; height: 40px; margintop: 10px; marginleft: 85%"
      >
        <el-button type="primary" icon="el-icon-search" @click="handleSearch"
          >搜索</el-button
        ></el-col
      >
    </el-row>
    <!-- 日期 -->

    <div class="earcth">
      <div ref="box" v-loading="loadingEcharts" class="eartch_left" />
      <div class="data_right">
        <el-checkbox-group v-model="checkList" @change="changeEcharts">
          <h3>指标</h3>
          <ul>
            <li>
              <el-checkbox class="impression" label="impression"
                >展示</el-checkbox
              >
            </li>
            <li><el-checkbox class="dau" label="dau">DAU</el-checkbox></li>
            <li><el-checkbox class="deu" label="deu">DEU</el-checkbox></li>
            <li>
              <el-checkbox class="permeability" label="permeability"
                >渗透率</el-checkbox
              >
            </li>

            <li>
              <el-checkbox class="estimatedRevenue" label="estimatedRevenue"
                >预估收益</el-checkbox
              >
            </li>
            <li>
              <el-checkbox
                class="estimatedRevenueEcpm"
                label="estimatedRevenueEcpm"
                >预估eCPM</el-checkbox
              >
            </li>
            <li>
              <el-checkbox class="aipau" label="aipau">展示 / DAU</el-checkbox>
            </li>
            <li>
              <el-checkbox class="unitRevenue" label="unitRevenue"
                >收益</el-checkbox
              >
            </li>
            <li>
              <el-checkbox class="arpu" label="arpu">人均收益</el-checkbox>
            </li>
            <li>
              <el-checkbox class="ecpm" label="ecpm">eCPM</el-checkbox>
            </li>
            <li>
              <el-checkbox class="request" label="request"
                >流量请求</el-checkbox
              >
            </li>
          </ul>
        </el-checkbox-group>
      </div>
    </div>
    <div class="table">
      <div class="showbox">
        <h2>数据维度</h2>
        <el-checkbox
          v-if="
            $store.state.user.roles[0] === 'SUPER_ADMIN' ||
            $store.state.user.roles[0] === 'BUSINESS'
          "
          v-model="showTable.account"
          medium
          ><h3>账户名称</h3></el-checkbox
        >
        <el-checkbox
          v-if="$store.state.user.roles[0] === 'SUPER_ADMIN'"
          v-model="showTable.business"
          medium
          ><h3>商务名称</h3></el-checkbox
        >
        <el-checkbox v-model="showTable.os" medium
          ><h3>操作系统</h3></el-checkbox
        >
        <el-checkbox v-model="showTable.appname" medium
          ><h3>应用名称</h3></el-checkbox
        >
      </div>
      <el-table
        border
        stripe
        :data="pageTableList"
        style="width: 100%"
        v-loading="loading"
      >
        <el-table-column
          align="center"
          fixed
          width="150px"
          prop="date"
          label="日期"
        >
        </el-table-column>
        <el-table-column
          align="center"
          v-if="showTable.appname"
          fixed
          width="150px"
          prop="appName"
          label="应用名称"
        >
          <template slot-scope="{ row }">
            {{ row.appName ? row.appName : "/" }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          v-if="showTable.os"
          fixed
          width="150px"
          prop="os"
          label="系统类型"
        >
          <template slot-scope="{ row }">
            {{ row.os == "-" ? "-" : row.os == 1 ? "安卓" : "ios" }}
          </template>
        </el-table-column>
        <el-table-column align="center" width="150px" prop="dau" label="DAU">
          <template slot-scope="{ row }">
            {{ row.dau }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="unitRevenue"
          label="收益"
        >
          <template slot-scope="{ row }">
            {{ row.unitRevenue == 0 ? 0 : (row.unitRevenue + 0).toFixed(2) }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="arpu"
          label="人均收益"
        >
          <template slot-scope="{ row }">
            {{ row.arpu == 0 ? 0 : (row.arpu + 0).toFixed(2) }}
          </template>
        </el-table-column>
        <el-table-column align="center" width="150px" prop="deu" label="DEU">
          <template slot-scope="{ row }">
            {{ row.deu }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="permeability"
          label="渗透率"
        >
          <template slot-scope="{ row }">
            {{
              row.permeability == 0
                ? 0
                : (row.permeability + 0).toFixed(2) + "%"
            }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="request"
          label="流量请求"
        >
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="impress"
          label="展示"
        >
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="aipau"
          label="展示 / DAU"
        >
          <template slot-scope="{ row }">
            {{ row.aipau == 0 ? 0 : (row.aipau + 0).toFixed(2) }}
          </template>
        </el-table-column>

        <el-table-column
          align="center"
          width="150px"
          prop="income"
          label="预估收益"
        >
          <template slot-scope="{ row }">
            {{ row.income == 0 ? 0 : (row.income + 0).toFixed(2) }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          width="150px"
          prop="estimatedRevenueEcpm"
          label="预估eCPM"
        >
          <template slot-scope="{ row }">
            {{
              row.estimatedRevenueEcpm == 0
                ? 0
                : (row.estimatedRevenueEcpm + 0).toFixed(2)
            }}
          </template>
        </el-table-column>

        <el-table-column
          align="center"
          width="150px"
          prop="unitEcpm"
          label="eCPM"
        >
          <template slot-scope="{ row }">
            {{ row.unitEcpm == 0 ? 0 : (row.unitEcpm + 0).toFixed(2) }}
          </template>
        </el-table-column>

        <el-table-column
          align="center"
          v-if="showTable.business"
          fixed="right"
          width="150px"
          prop="businessId"
          label="商务名称"
        >
          <template slot-scope="{ row }">
            {{ row.business !== null ? row.business : "/" }}
          </template>
        </el-table-column>
        <el-table-column
          align="center"
          v-if="showTable.account"
          fixed="right"
          width="150px"
          prop="adminUserId"
          label="账户名称"
        >
          <template slot-scope="{ row }">
            {{ row.adminUser !== undefined ? row.adminUser : "/" }}
          </template>
        </el-table-column>
      </el-table>
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="currentPage"
        :page-sizes="[5, 10, 20, 50]"
        :page-size="size"
        layout="total,sizes,prev,pager,next,jumper"
        :total="totalCount"
      ></el-pagination>
    </div>
  </div>
</template>

<script>
import {
  incomeData,
  homeEcharts,
  welcomeToDescribe,
  getBusinessList,
  getTableList,
  getRepoerSum,
} from "@/api/index";
import { getPlaceList } from "@/api/place";
import {
  getAppList,
  getAdminAndAppListByBusinessId,
  getAppListByAdminId,
} from "@/api/app";
import { getPositionList } from "@/api/common";
import { toDate } from "@/utils/toTimer";
import { platListByUser, appToAdvert } from "@/api/synthReport";
import echarts from "echarts";
import CustSelectApp from "@/components/CustSelectApp";

export default {
  name: "Admin",
  components: {
    CustSelectApp,
  },
  data() {
    return {
      iscreat: true,
      myEcharts: {},
      loadingEcharts: false,
      echartsParams: {
        adminUserIds: [],
        businessIds: [],
        dateStart: "",
        dateEnd: "",
        appIdList: [], // 应用id数组
        appIdListExclude: 1,
        placeIdList: [],
        placeIdListExclude: 1,
        positionIdList: [],
        positionIdListExclude: 1,
        platIdList: [],
        platIdListExclude: 1,
        osIdList: [],
        osIdListExclude: 1,
        groupByList: ["a.date"],
      },
      time: [],
      income: {
        beforeYesterday: 0,
        beforeYesterdayLabel: "",
        lastMonth: 0,
        lastMonthLabel: "",
        month: 0,
        monthLabel: "",
        yesterday: 0,
        yesterdayLabel: "",
      },

      chartOption: {},
      chartData: null,
      pickerOptions: {
        shortcuts: [
          {
            text: "最近一周",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
              picker.$emit("pick", [start, end]);
            },
          },
          {
            text: "最近14天",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 14);
              picker.$emit("pick", [start, end]);
            },
          },
          {
            text: "最近一个月",
            onClick(picker) {
              const end = new Date();
              const start = new Date();
              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
              picker.$emit("pick", [start, end]);
            },
          },
        ],
      },
      checkList: ["unitRevenue", "impression"],
      ecjartsList: [],
      nodataOption: {},
      option: {
        tooltip: {
          trigger: "axis",
          formatter: (params) => {
            let str = "";
            params.forEach((item, index) => {
              let temp = {};
              if (
                item.seriesName == "收益" ||
                item.seriesName == "eCPM" ||
                item.seriesName == "预估收益" ||
                item.seriesName == "人均收益"
              ) {
                temp.value = "￥" + item.value;
              } else {
                temp.value = item.value;
              }
              str += item.marker + item.seriesName + ": " + temp.value + "<br>";
            });
            return params[0].axisValue + "<br>" + str;
          },
        },
        legend: {
          data: [],
        },
        grid: {
          left: "4%",
          right: "4%",
          bottom: "3%",
          containLabel: true,
        },
        xAxis: {
          type: "category",
          boundaryGap: false,
          data: [],
          axisLine: {
            lineStyle: {
              color: "#000",
              width: 0.5,
            },
          },
        },
        yAxis: [
          // 0
          {
            type: "value",
            axisLabel: {
              formatter: "￥{value}",
            },
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },

            axisLabel: {
              show: false,
            },
          },
          // 1
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },

            axisLabel: {
              show: false,
            },
          },
          // 2
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 3
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 4
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 5
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 6
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 7
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 8
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 9
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
          // 10
          {
            type: "value",
            position: "",
            axisLine: {
              lineStyle: {
                color: "#000",
                width: 0.5,
              },
            },
            axisTick: {
              show: false,
            },
            axisLabel: {
              show: false,
            },
          },
        ],
        series: [
          // 展示
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 0,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#0055ff",
                lineStyle: {
                  color: "#0055ff",
                  width: 3,
                },
              },
            },
          },
          // DAU
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 1,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#ffab31",
                lineStyle: {
                  color: "#ffab31",
                  width: 3,
                },
              },
            },
          },
          // 预估收益
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 2,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#39da61",
                lineStyle: {
                  color: "#39da61",
                  width: 3,
                },
              },
            },
          },
          // 预估eCPM
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 3,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#ff6688",
                lineStyle: {
                  color: "#ff6688",
                  width: 3,
                },
              },
            },
          },
          // 展示/DAU
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 4,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#a8a8ff",
                lineStyle: {
                  color: "#a8a8ff",
                  width: 3,
                },
              },
            },
          },
          // 收益
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 5,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#de7af9",
                lineStyle: {
                  color: "#de7af9",
                  width: 3,
                },
              },
            },
          },
          // ecpm
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 6,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 7, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "rgb(0, 118, 143)",
                lineStyle: {
                  color: "rgb(0, 118, 143)",
                  width: 3,
                },
              },
            },
          },
          // DEU
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 7,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 7, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "rgb(76, 180, 231)",
                lineStyle: {
                  color: "rgb(76, 180, 231)",
                  width: 3,
                },
              },
            },
          },
          // 渗透率
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 8,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 7, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "rgb(255, 192, 159)",
                lineStyle: {
                  color: "rgb(255, 192, 159)",
                  width: 3,
                },
              },
            },
          },
          // 流量请求
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 9,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 7, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "rgb(145, 78, 0)",
                lineStyle: {
                  color: "rgb(145, 78, 0)",
                  width: 3,
                },
              },
            },
          },
          // 人均收益
          {
            name: "",
            type: "line",
            smooth: true,
            yAxisIndex: 10,
            data: [],
            symbol: "circle", // 设定为实心点
            symbolSize: 6, // 设定实心点的大小
            itemStyle: {
              normal: {
                color: "#ff746c",
                lineStyle: {
                  color: "#ff746c",
                  width: 3,
                },
              },
            },
          },
        ],
      },

      departments1: [], // 应用 全部数据数组
      department1: [], // 应用 选中数据

      options1: [],
      options2: [],
      departments2: [],
      departments3: [],

      checkedThing2: false,
      checkedThing3: false,
      department2: [],
      department3: [],

      selfstyle: {
        textAlign: "right",
        paddingRight: "10px",
      },
      appOptions: [],
      adverStyleOptions: [],
      systemPlatformOptions: [
        { label: "Android", value: "1" },
        { label: "iOS", value: "0" },
      ],
      adverStyleVal: "",
      systemPlatform: [],
      welcomeToDescribe: {},
      businessList: [],
      adminList: [],
      // table列表数据
      tableList: [],
      sum: {},
      // table列表加载中
      loading: false,
      showTable: {
        account: false,
        business: false,
        os: false,
        appname: false,
      },
      // 分页器
      currentPage: 1,
      totalCount: 1,
      size: 10,
    };
  },
  computed: {
    pageTableList() {
      let num1 = (this.currentPage - 1) * this.size;
      let num2 = this.currentPage * this.size;
      let list = this.tableList.slice(num1, num2);

      return list;
    },
  },
  created() {
    this.nodataOption = Object.assign({}, this.option);
    window.addEventListener("resize", this.getSize);
    this.getSize();
  },
  destroyed() {
    window.removeEventListener("resize", this.getSize);
  },
  mounted() {
    this.getIncome();
    this.echartsInit();
    this.getHomeEcharts();
    this.getDate();
    this.getApp();
    this.getPlace();
    this.getPosition();
    this.getPlatOptionList();
    this.getwelcomeToDescribe();
    this.getBusinessList();
    this.getTableList();
  },
  watch: {
    "echartsParams.businessIds": {
      handler(val) {
        this.echartsParams.adminUserIds = [];
        this.getPlatOptionList();

        if (!val) {
          this.adminList = [];
          this.echartsParams.adminUserIds = [];
          this.getApp();
          this.getPlace();

          return;
        }
        this.getAdminAndAppListByBusinessId({
          businessId: val[0],
        });
      },
    },
    "echartsParams.adminUserIds": {
      handler(val) {
        if (!val) {
          this.getAdminAndAppListByBusinessId({
            businessId: this.echartsParams.businessIds[0],
          });
        }
        this.getPlatOptionList();

        this.getAppListByAdminId({ id: this.echartsParams.adminUserIds[0] });
      },
      // account: false,
      //   business: false,
      //   os: false,
      //   appname: false,
    },
    departments2: {
      handler(val) {
        if (val.length === this.department2.length) {
          this.checkedThing2 = true;
        } else {
          this.checkedThing2 = false;
        }
      },
    },
    department2: {
      handler(val) {
        if (val.length === this.departments2.length) {
          this.checkedThing2 = true;
        } else {
          this.checkedThing2 = false;
        }
      },
    },
    "showTable.account": {
      handler() {
        this.handleSearch();
      },
    },
    "showTable.business": {
      handler() {
        this.handleSearch();
      },
    },
    "showTable.os": {
      handler() {
        this.handleSearch();
      },
    },
    "showTable.appname": {
      handler() {
        this.handleSearch();
      },
    },
  },
  methods: {
    // 应用列表改变时获取广告位数据
    appToAdvert(data) {
      appToAdvert(data).then((res) => {
        this.departments2 = res.data;
        // 广告位全部列表
        let arr1 = this.departments2.map((item) => {
          return item.id;
        });
        let arr2 = [];
        if (this.departments2.length > 0) {
          this.department2.forEach((item) => {
            if (arr1.includes(item)) {
              arr2.push(item);
            }
          });
          this.department2 = arr2;
        }

        if (this.departments2.length === 0) {
          this.department2 = [];
        }
        if (this.departments2.length === this.department2.length) {
          this.checkedThing2 = true;
        } else {
          this.checkedThing2 = false;
        }
      });
    },
    // 应用
    selectListhandle(val) {
      this.department1 = val;
      if (val.length > 0) {
        this.appToAdvert(this.department1);
      } else {
        this.getPlace();
      }
    },

    handleSizeChange(val) {
      this.size = val;
    },
    handleCurrentChange(val) {
      this.currentPage = val;
    },
    // 获取table列表数据
    async getTableList() {
      this.loading = true;

      let resp = await getTableList(this.echartsParams);

      if (resp.code !== 200) return;
      if (!resp.data) {
        this.tableList = [];
        this.loading = false;

        return;
      }
      this.sum = resp.data.aggregate;
      this.sum.date = "汇总";
      this.tableList = resp.data.items;

      let res = await getBusinessList();
      if (res.code !== 200) return;
      let businessList = res.data;

      for (let i = 0; i < businessList.length; i++) {
        for (let j = 0; j < this.tableList.length; j++) {
          if (businessList[i].id === this.tableList[j].businessId) {
            this.tableList[j].business = businessList[i].username;
          }
        }
      }

      let response = await getAdminAndAppListByBusinessId({ businessId: "" });
      if (response.code !== 200) return;
      let adminList = response.data.adminList;

      for (let i = 0; i < adminList.length; i++) {
        for (let j = 0; j < this.tableList.length; j++) {
          if (adminList[i].id === this.tableList[j].adminUserId) {
            this.tableList[j].adminUser = adminList[i].username;
          }
        }
      }
      this.totalCount = resp.data.total;

      this.tableList.unshift(this.sum);
      this.loading = false;
    },
    // 获取商务列表
    async getBusinessList() {
      let resp = await getBusinessList();
      if (resp.code !== 200) return;
      this.businessList = resp.data;
      if (this.$store.state.user.roles[0] === "BUSINESS") {
        this.echartsParams.businessIds[0] = this.businessList[0].id;
        this.getHomeEcharts();
        this.getAdminAndAppListByBusinessId({
          businessId: this.echartsParams.businessIds[0],
        });
      }
    },
    // 通过用户id查app列表
    async getAppListByAdminId(id) {
      let resp = await getAppListByAdminId(id);
      if (resp.code !== 200) return;
      this.departments1 = resp.data;
    },
    // 通过商务id获取账户列表和应用列表
    async getAdminAndAppListByBusinessId(businessId) {
      let resp = await getAdminAndAppListByBusinessId(businessId);
      if (resp.code !== 200) return;
      this.departments1 = resp.data.appList;
      this.departments1 = resp.data.appList;
      // adminList
      this.adminList = resp.data.adminList;

      for (let i = 0; i < this.adminList.length; i++) {
        for (let j = 0; j < this.tableList.length; j++) {
          if (this.adminList[i].id === this.tableList[j].adminUserId) {
            this.tableList[j].adminUser = this.adminList[i].username;
          }
        }
      }
      if (this.departments1.length > 0) {
        let arr = this.departments1.map((item) => {
          if (item === null) {
            return;
          } else {
            return item.id;
          }
        });
        this.appToAdvert(arr);
      } else {
        this.departments2 = [];
      }
    },
    // 获取welcome角色和用户名
    async getwelcomeToDescribe() {
      let resp = await welcomeToDescribe();
      if (resp.code !== 200) return;
      this.welcomeToDescribe = resp.data;
    },

    getSize() {
      // 判断是否是created时调用
      if (!this.iscreat) {
        this.myEcharts.resize();
      }
      this.iscreat = false;
    },
    getIncome() {
      incomeData().then((res) => {
        if (res.code !== 200) return this.$message.error(res.msg);
        this.income = res.data;
      });
    },
    getDate() {
      // 昨天
      let today = toDate(Date.now() - 24 * 60 * 60 * 1000);
      // 13天前
      let day13Before = toDate(Date.now() - 14 * 24 * 60 * 60 * 1000);
      this.time = [day13Before, today];
      this.echartsParams.dateStart = this.time[0];
      this.echartsParams.dateEnd = this.time[1];
    },
    // 应用
    getApp() {
      if (this.echartsParams.businessIds[0] === "") {
        getAppList().then((res) => {
          this.departments1 = res.data;
        });
      } else {
        this.getAdminAndAppListByBusinessId({
          businessId: this.echartsParams.businessIds[0],
        });
      }
    },
    // 广告位
    getPlace() {
      getPlaceList().then((res) => {
        this.departments2 = res.data;
      });
    },
    // 广告样式
    getPosition() {
      getPositionList().then((res) => {
        this.options1 = res.data;
      });
    },
    // 广告平台
    getPlatOptionList() {
      platListByUser({
        id: this.echartsParams.adminUserIds[0],
        businessId: this.echartsParams.businessIds[0],
      }).then((res) => {
        this.departments3 = res.data;
      });
    },
    getSTime() {
      if (this.time) {
        this.echartsParams.dateStart = this.time[0];
        this.echartsParams.dateEnd = this.time[1];
      } else {
        this.echartsParams.dateStart = "";
        this.echartsParams.dateEnd = "";
        this.time = [];
      }
    },

    //  广告位单选
    getSelectDep2(department) {
      if (department.length === this.departments2.length) {
        this.checkedThing2 = true;
      } else {
        this.checkedThing2 = false;
      }
      this.echartsParams.placeIdList = department;
    },
    //  广告位全选
    selectAllThing2() {
      this.department2 = [];
      if (this.checkedThing2) {
        this.departments2.map((item) => {
          this.department2.push(item.id);
        });
      } else {
        this.department2 = [];
      }
      this.echartsParams.placeIdList = this.department2;
    },

    //  广告平台单选
    getSelectDep3(department) {
      if (department.length === this.departments3.length) {
        this.checkedThing3 = true;
      } else {
        this.checkedThing3 = false;
      }
      this.echartsParams.platIdList = department;
    },
    // 广告平台 全选
    selectAllThing3() {
      this.department3 = [];
      if (this.checkedThing3) {
        this.departments3.map((item) => {
          this.department3.push(item.id);
        });
      } else {
        this.department3 = [];
      }
      this.echartsParams.platIdList = this.department3;
    },

    handleSearch() {
      if (this.echartsParams.businessIds[0] === "") {
        this.echartsParams.businessIds = [];
      }
      // 维度
      this.echartsParams.groupByList = [];
      this.echartsParams.groupByList.push("a.date");
      // 商务维度
      if (this.showTable.business) {
        this.echartsParams.groupByList.push("u.business_id");
      }
      // 操作系统
      if (this.showTable.os) {
        this.echartsParams.groupByList.push("app.os");
      }
      // 应用名称
      if (this.showTable.appname) {
        this.echartsParams.groupByList.push("a.app_id");
      }
      // 账户名称
      if (this.showTable.account) {
        this.echartsParams.groupByList.push("app.admin_user");
      }

      this.getHomeEcharts();
      this.getTableList();
    },

    echartsInit() {
      let myEcharts = echarts.init(this.$refs.box);
      myEcharts.setOption(this.option);
      this.myEcharts = myEcharts;
    },
    getHomeEcharts() {
      this.loadingEcharts = true;
      this.echartsParams.appIdList = this.department1;
      homeEcharts(this.echartsParams).then((res) => {
        if (res.code !== 200) return;
        // 无数据
        if (!res.data) {
          for (let j = 0; j < this.option.series.length; j++) {
            this.option.series[j].data = [];
            this.option.series[j].name = "";
          }

          this.option = Object.assign({}, this.nodataOption);
          this.loadingEcharts = false;
          this.echartsInit();

          return;
        }

        setTimeout(() => {
          this.loadingEcharts = false;
        }, 400);
        this.option.xAxis.data = res.data.lable;
        res.data.list.forEach((e) => {
          if (e.field === "estimatedRevenue") {
            e.data.forEach((item, index) => {
              e.data[index] = item.toFixed(2);
            });
          }
          if (e.field === "unitRevenue") {
            e.data.forEach((item, index) => {
              e.data[index] = item.toFixed(2);
            });
          }
        });

        this.ecjartsList = res.data.list;
        this.changeEcharts();
      });
    },
    // 点击复选框
    changeEcharts() {
      for (let j = 0; j < this.option.series.length; j++) {
        this.option.series[j].data = [];
        this.option.series[j].name = "";
      }
      for (let i = 0; i < this.checkList.length; i++) {
        // unitRevenue              50k
        // impression               500k
        // dua                      5k
        // arpu                     1
        // aipau                    15
        // estimatedRevenue         50k
        // estimatedRevenueEcpm     15
        // this.option.yAxis
        for (let j = 0; j < this.ecjartsList.length; j++) {
          if (this.checkList[i] === this.ecjartsList[j].field) {
            this.option.series[j].data = this.ecjartsList[j].data;
            this.option.series[j].name = this.ecjartsList[j].name;
            let yAxisIndex = this.option.series[j].yAxisIndex;
            // 判断改图表中显示的数据是否有三个
            if (this.checkList.length >= 3) {
              // 大于三个，刻度和数值不显示
              this.option.yAxis[yAxisIndex].position = "";
              // 刻度
              this.option.yAxis[yAxisIndex].axisTick.show = false;
              // 数值
              this.option.yAxis[yAxisIndex].axisLabel.show = false;
            } else {
              // 小于三个，分别给他们加上位置、数值和刻度显示
              this.option.yAxis[yAxisIndex].axisTick.show = true;
              this.option.yAxis[yAxisIndex].axisLabel.show = true;
              if (i == 0) {
                // 第一个的y坐标放在左边
                this.option.yAxis[yAxisIndex].position = "left";
              } else if (i == 1) {
                // 第二个的y坐标放在右边
                this.option.yAxis[yAxisIndex].position = "right";
              }
            }
          }
        }
      }
      this.echartsInit();
    },
  },
};
</script>

<style lang="scss" scoped>
body {
  // width: 100%;
  overflow-x: scroll;
}
.tab-container {
  padding: 10px;
  // background-color: rgb(240, 242, 245);
  position: relative;
  .welcome {
    margin: 10px 20px 10px 20px;
  }
  .item {
    margin: 0 20px 20px 0;
  }
  .panel-group {
    .card-panel-col {
      margin-bottom: 32px;
      width: 20%;
    }

    .card-panel {
      display: flex;
      height: 108px;
      cursor: pointer;
      font-size: 12px;
      position: relative;
      overflow: hidden;
      color: #666;
      background: #fff;
      box-shadow: 4px 4px 40px rgba(0, 0, 0, 0.05);
      border-color: rgba(0, 0, 0, 0.05);

      // &:hover {
      //   .card-panel-icon-wrapper {
      //     color: #fff;
      //   }

      //   .icon-yesterday {
      //     background: #40c9c6;
      //   }

      //   .icon-last-seven-day {
      //     background: #36a3f7;
      //   }

      //   .icon-month {
      //     background: #f4516c;
      //   }

      //   .icon-all {
      //     background: #34bfa3;
      //   }
      // }
      .icon-today {
        color: #74ebaf;
      }

      .icon-yesterday {
        color: #40c9c6;
      }

      .icon-last-seven-day {
        color: #36a3f7;
      }

      .icon-month {
        color: #f4516c;
      }

      .icon-all {
        color: #34bfa3;
      }

      .card-panel-icon-wrapper {
        float: left;
        margin: 14px 0 0 0px;
        padding: 16px;
        transition: all 0.38s ease-out;
        border-radius: 6px;
      }

      .card-panel-icon {
        float: left;
        font-size: 48px;
      }

      .card-panel-description {
        // float: left;
        flex: 1;
        font-weight: bold;
        margin: 26px 0px 26px 0;

        .card-panel-text {
          line-height: 18px;
          color: rgba(0, 0, 0, 0.45);
          font-size: 16px;
          margin-bottom: 12px;
        }
        .card-panel-num {
          font-size: 20px;
        }
      }
    }
  }
  .earcth {
    display: flex;
    width: 100%;
    margin-top: 20px;
    // overflow-x: scroll;
    background-color: #fff;
    .eartch_left {
      width: 80%;
      // height: 380px;
      // background-color: blue;
    }
    .data_right {
      flex: 1;

      h3 {
        font-weight: 400;
        height: 40px;
        line-height: 40px;
        color: #333;
        border: 1px solid rgb(214, 208, 208);
        border-bottom: none;
        box-sizing: border-box;
        color: #333;
        font-size: 14px;
        padding-left: 30px;
        background-color: #f5f7fa;
      }
      ul {
        height: 300px;
        overflow-y: scroll;
        border: 1px solid rgb(214, 208, 208);
        li {
          height: 40px;
          line-height: 40px;
          padding-left: 20px;
          box-sizing: border-box;
          border-bottom: 1px solid rgb(214, 208, 208);
        }
      }
    }
  }
  .searchTiaojian {
    width: 100%;
    background-color: red;
    margin-bottom: 15px;
  }
}
.box {
  font-size: 22px;
}
// 单选框文字样式
// 展示
::v-deep .impression .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #0055ff;
}
// DAU
::v-deep .dau .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #ffab31;
}
// 预估收益
::v-deep
  .estimatedRevenue
  .el-checkbox__input.is-checked
  + .el-checkbox__label {
  color: #39da61;
}
// 预估eCPM
::v-deep
  .estimatedRevenueEcpm
  .el-checkbox__input.is-checked
  + .el-checkbox__label {
  color: #ff6688;
}
// 展示/DAU
::v-deep .aipau .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #a8a8ff;
}
// 收益
::v-deep .unitRevenue .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #de7af9;
}
// 人均收益
::v-deep .arpu .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #ff746c;
}

// ecpm
::v-deep .ecpm .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(0, 118, 143);
}
// deu
::v-deep .deu .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(76, 180, 231);
}
// 渗透率
::v-deep .permeability .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(255, 192, 159);
}
// 流量请求
::v-deep .request .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(145, 78, 0);
}

// 单选框框样式
// 展示
::v-deep .impression .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #0055ff;
  background-color: #0055ff;
}
// DAU
::v-deep .dau .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #ffab31;
  background-color: #ffab31;
}
// 预估收益
::v-deep .estimatedRevenue .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #39da61;
  background-color: #39da61;
}
// 预估eCPM
::v-deep
  .estimatedRevenueEcpm
  .el-checkbox__input.is-checked
  .el-checkbox__inner {
  border-color: #ff6688;
  background-color: #ff6688;
}
// 展示/DAU
::v-deep .aipau .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #a8a8ff;
  background-color: #a8a8ff;
}
// 收益
::v-deep .unitRevenue .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #de7af9;
  background-color: #de7af9;
}
// 人均收益
::v-deep .arpu .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #ff746c;
  background-color: #ff746c;
}
// ecpm
::v-deep .ecpm .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(0, 118, 143);
  background-color: rgb(0, 118, 143);
}
// deu
::v-deep .deu .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(76, 180, 231);
  background-color: rgb(76, 180, 231);
}
// 渗透率
::v-deep .permeability .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(255, 192, 159);
  background-color: rgb(255, 192, 159);
}
// 流量请求
::v-deep .request .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(145, 78, 0);
  background-color: rgb(145, 78, 0);
}

// 搜索 应用

::v-deep .el-checkbox.is-checked .el-checkbox__label {
  color: #606266;
}
::v-deep.tab-container .app_option.tab-container {
  border: 1px solid #000;
  background-color: red;
  width: 400px;
}
.app_option .appsearch .search-left {
  box-sizing: border-box;
}
.app_option .appsearch .search-left .btn {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 30px;
  background-color: #fff;
  z-index: 10;
  padding-top: 5px;
  padding-left: 5px;
}
.app_option .appsearch .search-left .input {
  position: absolute;
  top: 30px;
  left: 0;
  width: 95%;
  z-index: 10;
  margin-bottom: 10px;
  margin-left: 5px;
  background-color: #fff;
  margin-bottom: 10px;
}
.app_option .appsearch .search-left .checkbox_group {
  margin-top: 70px;
  // background-color: #40c9c6;
}
.app_option .appsearch .search-left .checkbox_group li {
  display: block;
  height: 50px;
}
.app_option .appsearch .search-left .checkbox_group li::after {
  display: none;
}
.app_option .appsearch .search-left .checkbox_group .name {
  font-weight: 700;
}

// table列表
.table {
  margin: 30px 3% 200px 3%;
}
.showbox {
  margin: 20px 0 20px 0;
}
.showbox h2 {
  display: inline-block;
  margin: 0 20px;
}
.showbox .el-checkbox {
  padding-bottom: 10px;
}
::v-deep.table .el-table tr:nth-of-type(1) {
  background-color: #eee;
}
// ::v-deep.table .el-table__fixed-header-wrapper .el-table tr:nth-of-type(1){
//   background-color: #f40;
// }

// new app
</style>
