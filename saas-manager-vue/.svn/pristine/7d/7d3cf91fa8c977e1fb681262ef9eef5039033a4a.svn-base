<template>
  <div class="dashboard-editor-container">
    <dataList ref="dataList" />

    <div class="filter-container">
      <!-- 日期 -->
      <el-date-picker
        v-model="time"
        :clearable="false"
        class="filter-item"
        type="daterange"
        value-format="yyyy-MM-dd"
        align="left"
        unlink-panels
        range-separator="至"
        start-placeholder="开始日期"
        end-placeholder="结束日期"
        :picker-options="pickerOptions"
        @change="getSTime"
      />
      <!-- 商务 -->
      <el-select
        v-show="false"
        :disabled="$store.state.user.roles[0] === 'BUSINESS'"
        class="filter-item"
        clearable
        v-model="echartsParams.businessIds[0]"
        placeholder="请选择商务"
        style="width: 90%"
      >
        <el-option
          v-for="item in businessList"
          :key="item.id"
          :label="item.username"
          :value="item.id"
        >
        </el-option>
      </el-select>

      <!-- 账号 -->
      <el-select
        v-if="
          $store.state.user.roles[0] === 'SUPER_ADMIN' ||
          $store.state.user.roles[0] === 'BUSINESS' ||
          $store.state.user.roles[0] == 'TECHNOLOGY' ||
          $store.state.user.roles[0] == 'MANAGEMENT' ||
          $store.state.user.roles[0] == 'BUSINESS_DIRECTOR' ||
          $store.state.user.roles[0] == 'OPERATOR_DIRECTOR'
        "
        v-model="echartsParams.adminUserIds[0]"
        class="filter-item"
        clearable
        placeholder="请选择账号"
        style="width: 260px"
      >
        <el-option
          v-for="item in adminList"
          :key="item.id"
          :label="item.company"
          :value="item.id"
        >
        </el-option>
      </el-select>

      <!-- 应用1 -->
      <CustSelectApp
        class="filter-item"
        style="width: 260px"
        :word="'应用'"
        :width="450"
        :allData="departments1"
        @selectListhandle="selectListhandleApp"
      />

      <!-- 广告位 -->
      <CustSelectApp
        class="filter-item"
        style="width: 260px"
        :word="'广告位'"
        :width="450"
        :allData="departments2"
        @selectListhandle="selectListhandlePlace"
      />

      <!-- 广告样式 -->
      <el-select
        style="width: 260px"
        v-model="echartsParams.positionIdList"
        class="filter-item"
        multiple
        collapse-tags
        placeholder="请选择广告样式"
      >
        <el-option
          v-for="item in options1"
          :key="item.value"
          :label="item.name"
          :value="item.id"
        />
      </el-select>

      <!-- 广告源-->
      <CustSelectApp
        style="width: 260px"
        class="filter-item"
        :word="'广告源'"
        :width="450"
        :allData="departments3"
        @selectListhandle="selectListhandlePlat"
      />

      <!-- 系统平台 -->
      <el-select
        style="width: 260px"
        v-model="echartsParams.osIdList"
        class="filter-item"
        multiple
        placeholder="请选择系统平台"
      >
        <el-option
          v-for="item in systemPlatformOptions"
          :key="item.value"
          :label="item.label"
          :value="item.value"
        />
      </el-select>
      <el-button
        class="filter-item"
        type="primary"
        icon="el-icon-search"
        @click="handleSearch"
        >查询</el-button
      >
    </div>

    <div class="earcth">
      <div ref="box" v-loading="loadingEcharts" class="eartch_left" />
      <div class="data_right">
        <el-checkbox-group v-model="checkList" @change="changeEcharts">
          <h3>指标</h3>
          <ul>
            <li><el-checkbox class="dau" label="dau">DAU</el-checkbox></li>
            <li>
              <el-checkbox class="unitRevenue" label="unitRevenue"
                >收益</el-checkbox
              >
            </li>
            <li>
              <el-checkbox class="ecpm" label="ecpm">eCPM</el-checkbox>
            </li>
            <li>
              <el-checkbox class="arpu" label="arpu">人均收益</el-checkbox>
            </li>
            <li>
              <el-checkbox class="estimatedRevenue" label="estimatedRevenue"
                >预估收益</el-checkbox
              >
            </li>
            <li>
              <el-checkbox
                class="estimatedRevenueEcpm"
                label="estimatedRevenueEcpm"
                >预估eCPM</el-checkbox
              >
            </li>

            <li>
              <el-checkbox class="request" label="request"
                >流量请求</el-checkbox
              >
            </li>

            <li>
              <el-checkbox class="impression" label="impression"
                >展示</el-checkbox
              >
            </li>

            <li>
              <el-checkbox class="aipau" label="aipau">展示 / DAU</el-checkbox>
            </li>
          </ul>
        </el-checkbox-group>
      </div>
    </div>
    <div class="table">
      <div class="showbox">
        <h2>数据维度</h2>
        <el-checkbox
          v-if="
            $store.state.user.roles[0] === 'SUPER_ADMIN' ||
            $store.state.user.roles[0] === 'BUSINESS'
          "
          v-model="showTable.account"
          medium
          ><h3>账户名称</h3></el-checkbox
        >
        <el-checkbox v-show="false" v-model="showTable.business" medium
          ><h3>商务名称</h3></el-checkbox
        >

        <el-checkbox v-model="showTable.appname" medium
          ><h3>应用名称</h3></el-checkbox
        >
        <el-checkbox v-model="showTable.os" medium
          ><h3>操作系统</h3></el-checkbox
        >
      </div>
      <div class="table_box" v-if="tableList.length > 0">
        <el-table
          :header-cell-style="{ 'background-color': '#f7f8fa', color: '#000' }"
          stripe
          :data="tableList"
          style="width: 100%"
          v-loading="loading"
        >
          <el-table-column
            align="center"
            fixed
            prop="date"
            width="120px"
            label="日期"
          >
          </el-table-column>
          <el-table-column
            align="center"
            v-if="showTable.account"
            fixed
            width="180px"
            prop="adminUserId"
            label="账户名称"
          >
            <template slot-scope="{ row }">
              {{ row.adminUser !== undefined ? row.adminUser : "-" }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            v-if="showTable.appname"
            fixed
            width="150px"
            prop="appName"
            label="应用名称"
          >
            <template slot-scope="{ row }">
              {{ row.appName ? row.appName : "-" }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            v-if="showTable.os"
            fixed
            width="150px"
            prop="os"
            label="操作系统"
          >
            <template slot-scope="{ row }">
              {{ row.os == 1 ? "安卓" : row.os == 0 ? "ios" : "-" }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="dau"
            label="DAU"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.dau }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="unitRevenue"
            label="收益"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.unitRevenue ? row.unitRevenue : "0" }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="arpu"
            label="人均收益"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.arpu ? row.arpu : "0" }}
            </template>
          </el-table-column>
          <!-- <el-table-column align="center" width="150px" prop="deu" label="DEU">
          <template slot-scope="{ row }">
            {{ row.deu }}
          </template>
        </el-table-column> -->
          <!-- <el-table-column
          align="center"
          width="150px"
          prop="permeability"
          label="渗透率"
        >
          <template slot-scope="{ row }">
            {{
              row.permeability == 0
                ? 0
                : (row.permeability + 0).toFixed(2) + "%"
            }}
          </template>
        </el-table-column> -->
          <el-table-column
            v-if="!hasPlatIdList"
            align="center"
            width="150px"
            prop="request"
            label="流量请求"
            :render-header="renderHeader"
          >
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="impress"
            label="展示"
            :render-header="renderHeader"
          >
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="aipau"
            label="展示 / DAU"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.aipau == 0 ? 0 : (row.aipau + 0).toFixed(2) }}
            </template>
          </el-table-column>

          <el-table-column
            align="center"
            width="150px"
            prop="income"
            label="预估收益"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.income == 0 ? 0 : (row.income + 0).toFixed(2) }}
            </template>
          </el-table-column>
          <el-table-column
            align="center"
            width="150px"
            prop="estimatedRevenueEcpm"
            label="预估eCPM"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{
                row.estimatedRevenueEcpm == 0
                  ? 0
                  : (row.estimatedRevenueEcpm + 0).toFixed(2)
              }}
            </template>
          </el-table-column>

          <el-table-column
            align="center"
            width="150px"
            prop="unitEcpm"
            label="eCPM"
            :render-header="renderHeader"
          >
            <template slot-scope="{ row }">
              {{ row.unitEcpm == 0 ? 0 : (row.unitEcpm + 0).toFixed(2) }}
            </template>
          </el-table-column>

          <!-- <el-table-column
          align="center"
          v-if="showTable.business"
          fixed="right"
          width="150px"
          prop="businessId"
          label="商务名称"
        >
          <template slot-scope="{ row }">
            {{ row.business !== null ? row.business : "/" }}
          </template>
        </el-table-column> -->
        </el-table>
        <el-pagination
          v-if="tableList.length > 0"
          style="margin: 30px 0 0 0"
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :current-page="echartsParams.page"
          :page-sizes="[5, 10, 20, 50]"
          :page-size="echartsParams.limit"
          layout="total,sizes,prev,pager,next,jumper"
          :total="totalCount"
        ></el-pagination>
      </div>

      <Empty v-else></Empty>
    </div>
  </div>
</template>

<script>
import dataList from "./components/dataList";
import {
  incomeData,
  homeEcharts,
  getBusinessList,
  getTableList,
} from "@/api/index";
import { getPlaceList, getPlaceListByAppId } from "@/api/place";
import {
  getAppList,
  getAdminAndAppListByBusinessId,
  getAppListByAdminId,
} from "@/api/app";
import { getPositionList } from "@/api/common";
import { toDate } from "@/utils/toTimer";
import { platListByUser, appToAdvert } from "@/api/synthReport";
import echarts from "echarts";
import CustSelectApp from "@/components/CustSelectApp";

import Empty from "@/components/empty";
import { adminEchartsOption, adminDateOotion } from "@/utils/options";
import tips from "@/components/tips/HelpHint/HelpHint.vue";

export default {
  name: "Admin",
  components: {
    dataList,
    CustSelectApp,
    Empty,
    tips,
  },
  data() {
    return {
      iscreat: true,
      myEcharts: {},
      loadingEcharts: false,
      echartsParams: {
        adminUserIds: [],
        businessIds: [],
        dateStart: "",
        dateEnd: "",
        appIdList: [], // 应用id数组
        appIdListExclude: 1,
        placeIdList: [],
        placeIdListExclude: 1,
        positionIdList: [],
        positionIdListExclude: 1,
        platIdList: [],
        platIdListExclude: 1,
        osIdList: [],
        osIdListExclude: 1,
        groupByList: ["a.date"],
        limit: 10,
        page: 1,
      },
      time: [],
      income: {
        beforeYesterday: 0,
        beforeYesterdayLabel: "",
        lastMonth: 0,
        lastMonthLabel: "",
        month: 0,
        monthLabel: "",
        yesterday: 0,
        yesterdayLabel: "",
      },

      chartOption: {},
      chartData: null,
      pickerOptions: adminDateOotion,
      checkList: ["unitRevenue", "dau"],
      ecjartsList: [],
      nodataOption: {},
      option: adminEchartsOption,

      departments1: [], // 应用 全部数据数组
      department1: [], // 应用 选中数据

      options1: [],
      options2: [],
      departments2: [],
      departments3: [],

      // checkedThing2: false,
      // checkedThing3: false,
      department2: [],
      department3: [],

      selfstyle: {
        textAlign: "right",
        paddingRight: "10px",
      },
      appOptions: [],
      adverStyleOptions: [],
      systemPlatformOptions: [
        { label: "Android", value: "1" },
        { label: "iOS", value: "0" },
      ],
      adverStyleVal: "",
      systemPlatform: [],
      businessList: [],
      adminList: [],
      // table列表数据
      tableList: [],
      sum: {},
      // table列表加载中
      loading: false,
      showTable: {
        account: false,
        business: false,
        os: false,
        appname: false,
      },
      timer: null,
      // 分页器
      totalCount: 1,
      // table对照列表
      businessListforTable: [],
      adminListforTable: [],
      hasPlatIdList: false,
    };
  },
  computed: {
    title() {
      return this.$store.getters.title;
    },
  },
  created() {
    this.nodataOption = Object.assign({}, this.option);
    window.addEventListener("resize", this.getSize);
    this.getSize();
  },
  destroyed() {
    this.myEcharts.dispose();
    window.removeEventListener("resize", this.getSize);
  },
  async mounted() {
    this.getDate();
    await this.getListforTable();
    this.getIncome();
    this.echartsInit();
    this.getApp();
    this.getPlace();
    this.getPosition();
    this.getPlatOptionList();
    this.getBusinessList();
    this.getHomeEcharts();
    this.getTableList();
  },
  watch: {
    "echartsParams.businessIds": {
      handler(val) {
        if (val[0] === "") {
          this.echartsParams.businessIds = [];
        }
        this.echartsParams.adminUserIds = [];
        this.getPlatOptionList();

        if (!val) {
          this.adminList = [];
          this.echartsParams.adminUserIds = [];
          this.getApp();
          this.getPlace();

          return;
        }
        this.getAdminAndAppListByBusinessId({
          businessId: val[0],
        });
      },
    },
    "echartsParams.adminUserIds": {
      handler(val) {
        if (val[0] === "") {
          this.echartsParams.adminUserIds = [];
        }
        if (!val) {
          this.getAdminAndAppListByBusinessId({
            businessId: this.echartsParams.businessIds[0],
          });
        }
        this.getPlatOptionList();

        this.getAppListByAdminId({ id: this.echartsParams.adminUserIds[0] });
      },
    },
    departments1: {
      handler(val) {
        if (val.length > 0) {
          let arr = val.map((item) => {
            return item.id;
          });
          this.appToAdvert(arr);
        } else {
          this.departments2 = [];
        }
      },
    },
    showTable: {
      handler(val) {
        if (this.timer) {
          clearTimeout(this.timer);
          this.timer = null;
        }
        this.timer = setTimeout(() => {
          this.handleSearch();
        }, 600);
      },
      deep: true,
    },
    // "showTable.account": {
    //   handler() {
    //     this.handleSearch();
    //   },
    // },
    // "showTable.business": {
    //   handler() {
    //     this.handleSearch();
    //   },
    // },
    // "showTable.os": {
    //   handler() {
    //     this.handleSearch();
    //   },
    // },
    // "showTable.appname": {
    //   handler() {
    //     this.handleSearch();
    //   },
    // },
  },
  methods: {
    // 渲染table表头提示
    renderHeader(h, { column, $index }) {
      // DAU
      if (column.property === "dau") {
        return this.$createElement("tips", {
          props: {
            content: `每天打开应用的独立用户数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // DEU
      if (column.property === "deu") {
        return this.$createElement("tips", {
          props: {
            content: `每天观看过广告的独立用户数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 渗透率
      if (column.property === "permeability") {
        return this.$createElement("tips", {
          props: {
            content: `每天观看过广告的用户占比，渗透率=DEU/DAU`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 人均收益
      if (column.property === "arpu") {
        return this.$createElement("tips", {
          props: {
            content: `人均收益，ARPU=收益/DAU`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 展示/DAU
      if (column.property === "aipau") {
        return this.$createElement("tips", {
          props: {
            content: `人均展示次数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 展示/DEU
      if (column.property === "aipu") {
        return this.$createElement("tips", {
          props: {
            content: `观看过广告的用户人均展示次数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 流量请求
      if (column.property === "request") {
        return this.$createElement("tips", {
          props: {
            content: `应用向${this.title}发送请求的次数，一次流量请求可能触发多次广告请求`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 流量填充率
      if (column.property === "requestFilledRate") {
        return this.$createElement("tips", {
          props: {
            content: `应用向${this.title}发送请求后，响应成功的占比`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 预估收益
      if (column.property === "income") {
        return this.$createElement("tips", {
          props: {
            content: `预估收益=SUM(代码位人工填写的eCPM价格*${this.title}统计的展示/1000)`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 预估eCPM
      if (column.property === "estimatedRevenueEcpm") {
        return this.$createElement("tips", {
          props: {
            content: `（预估收益/${this.title}统计的展示）*1000`,
            title: column.label,
            isShow: true,
          },
        });
      }
      //展示
      if (column.property === "impress") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}统计的广告曝光次数，由于统计口径差异、网络丢包等因素，${this.title}统计的展示数据与广告平台展示数据可能存在差异`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 展示率
      if (column.property === "impressRate") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}收到来自广告平台的广告返回后，展示成功的占比。公式为 展示率 = (展示/填充)`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 点击
      if (column.property === "click") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}统计的广告点击数，由于部分广告平台不提供点击回调，${this.title}统计的点击数据与广告平台点击数据可能存在差异`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 点击率
      if (column.property === "clickRate") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}统计的点击率，点击率=点击数/展示数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 展示Gap
      if (column.property === "impressionGap") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}统计展示与广告平台统计展示的差异，公式为 展示Gap=(展示-展示API)/展示API`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 点击Gap
      if (column.property === "clickGap") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}统计点击与广告平台统计点击的差异，公式为 点击Gap=(点击-点击API)/点击API`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 收益
      if (column.property === "unitRevenue") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的收益`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 展示API
      if (column.property === "unitImpression") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的展示`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 点击API
      if (column.property === "unitClick") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的点击`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // eCPM
      if (column.property === "unitEcpm") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的收益和展示API计算出eCPM API，公式：（收益/展示API）*1000`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 点击率API
      if (column.property === "unitCtr") {
        return this.$createElement("tips", {
          props: {
            content: `点击API/展示API`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 请求API
      if (column.property === "unitRequest") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的广告请求数，部分平台不提供此数据`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 填充率API
      if (column.property === "unitFilledRate") {
        return this.$createElement("tips", {
          props: {
            content: `${this.title}通过Reporting API向广告平台拉取到的填充率，部分平台不提供此数据`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 聚合-请求
      if (column.property === "advRequest") {
        return this.$createElement("tips", {
          props: {
            content: `汇总行表示流量请求，即应用向${this.title}发起请求的次数；其他行表示广告请求，即${this.title}向广告平台发起请求的次数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 聚合-填充率
      if (column.property === "advRequestFilledRate") {
        return this.$createElement("tips", {
          props: {
            content: `汇总行表示流量填充率，即应用向${this.title}发送请求后返回成功的占比；其余行表示广告填充率，即${this.title}向广告平台发送请求后返回成功的占比`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 新用户
      if (column.property === "newLogin") {
        return this.$createElement("tips", {
          props: {
            content: `首次使用应用的用户数`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 新用户占比
      if (column.property === "newUserRate") {
        return this.$createElement("tips", {
          props: {
            content: `首次使用应用的用户占比，计算公式：新增用户/DAU`,
            title: column.label,
            isShow: true,
          },
        });
      }
      // 其他
      return this.$createElement("tips", {
        props: {
          content: ``,
          title: column.label,
          isShow: false,
        },
      });
    },
    async getListforTable() {
      let response = await getAdminAndAppListByBusinessId({ businessId: "" });
      if (response.code !== 200) return;
      this.adminListforTable = response.data.adminList;
    },
    // 应用列表改变时获取广告位数据
    appToAdvert(data) {
      if (data.length === 0) {
        return;
      }
      appToAdvert(data).then((res) => {
        this.departments2 = res.data;
      });
    },
    // 广告源
    selectListhandlePlat(val) {
      this.echartsParams.platIdList = [...val];
    },
    // 广告位
    selectListhandlePlace(val) {
      this.echartsParams.placeIdList = [...val];
    },
    // 应用
    selectListhandleApp(val) {
      this.echartsParams.appIdList = [...val];
      if (val.length > 0) {
        this.appToAdvert(val);
      } else {
        let arr = this.departments1.map((item) => {
          return item.id;
        });
        this.appToAdvert(arr);
      }
    },

    // 改变也容量
    handleSizeChange(val) {
      this.echartsParams.limit = val;
      this.echartsParams.page = 1;

      this.getTableList();
    },
    handleCurrentChange(val) {
      this.echartsParams.page = val;
      this.getTableList();
    },
    // 获取table列表数据
    async getTableList() {
      this.hasPlatIdList = false;

      if (this.echartsParams.platIdList.length > 0) {
        this.hasPlatIdList = true;
      }
      this.loading = true;
      if (
        !this.echartsParams.groupByList.includes("app.admin_user") &&
        this.showTable.account
      ) {
        this.echartsParams.groupByList.push("app.admin_user");
      }
      if (
        !this.echartsParams.groupByList.includes("u.business_id") &&
        this.showTable.business
      ) {
        this.echartsParams.groupByList.push("u.business_id");
      }
      if (
        !this.echartsParams.groupByList.includes("app.os") &&
        this.showTable.os
      ) {
        this.echartsParams.groupByList.push("app.os");
      }
      if (
        !this.echartsParams.groupByList.includes("a.app_id") &&
        this.showTable.appname
      ) {
        this.echartsParams.groupByList.push("a.app_id");
      }

      let resp = await getTableList(this.echartsParams);

      this.echartsParams.groupByList = ["a.date"];

      if (resp.code !== 200) return;
      if (!resp.data) {
        this.tableList = [];
        this.loading = false;

        return;
      }
      if (resp.data.items.length === 0) {
        this.tableList = [];
        return;
      }

      this.sum = resp.data.aggregate;
      this.sum.date = "汇总";
      this.sum.os = "-";

      this.tableList = resp.data.items;

      for (let i = 0; i < this.adminListforTable.length; i++) {
        for (let j = 0; j < this.tableList.length; j++) {
          if (this.adminListforTable[i].id === this.tableList[j].adminUserId) {
            this.tableList[j].adminUser = this.adminListforTable[i].username;
          }
          if (this.tableList[j].adminUserId === 1) {
            this.tableList[j].adminUser = "超级管理员";
          }
        }
      }
      this.totalCount = resp.data.total;

      this.tableList.unshift(this.sum);
      this.loading = false;
    },
    // 获取商务列表
    async getBusinessList() {
      let resp = await getBusinessList();
      if (resp.code !== 200) return;
      this.businessList = resp.data;
      if (this.$store.state.user.roles[0] === "BUSINESS") {
        this.echartsParams.businessIds[0] = this.businessList[0].id;
        this.getHomeEcharts();
        this.getAdminAndAppListByBusinessId({
          businessId: this.echartsParams.businessIds[0],
        });
      }
    },
    // 通过用户id查app列表
    async getAppListByAdminId(id) {
      if (!id.id) {
        this.getApp();
        return;
      }
      let resp = await getAppListByAdminId(id);
      if (resp.code !== 200) return;

      if (!resp.data) {
        this.departments1 = [];
      } else {
        this.departments1 = resp.data;
      }
    },
    // 通过商务id获取账户列表和应用列表
    async getAdminAndAppListByBusinessId(businessId) {
      let resp = await getAdminAndAppListByBusinessId(businessId);
      if (resp.code !== 200) return;
      // if(!resp.data){}
      this.departments1 = resp.data.appList;
      this.departments1 = resp.data.appList;
      // adminList
      this.adminList = resp.data.adminList;

      for (let i = 0; i < this.adminList.length; i++) {
        for (let j = 0; j < this.tableList.length; j++) {
          if (this.adminList[i].id === this.tableList[j].adminUserId) {
            this.tableList[j].adminUser = this.adminList[i].username;
          }
        }
      }
      if (this.departments1.length > 0) {
        let arr = this.departments1.map((item) => {
          if (item === null) {
            return;
          } else {
            return item.id;
          }
        });
        // this.appToAdvert(arr);
      } else {
        this.departments2 = [];
      }
    },
    // // 获取welcome角色和用户名
    // async getwelcomeToDescribe() {
    //   let resp = await welcomeToDescribe();
    //   if (resp.code !== 200) return;
    //   this.welcomeToDescribe = resp.data;
    // },

    getSize() {
      // 判断是否是created时调用
      if (!this.iscreat) {
        this.myEcharts.resize();
      }
      this.iscreat = false;
    },
    getIncome() {
      incomeData().then((res) => {
        if (res.code !== 200) return this.$message.error(res.msg);
        // this.income = res.data;
        this.$nextTick(() => {
          this.$refs.dataList.initData(res.data);
          // this.$refs.pieChart.initChart(res.data.houseCount);
          // this.$refs.barChart.initChart(res.data.monthPay);
        });
      });
    },
    getDate() {
      // 昨天
      let today = toDate(Date.now() - 24 * 60 * 60 * 1000);
      // 13天前
      let day13Before = toDate(Date.now() - 14 * 24 * 60 * 60 * 1000);
      this.time = [day13Before, today];
      this.echartsParams.dateStart = this.time[0];
      this.echartsParams.dateEnd = this.time[1];
    },
    // 应用
    getApp() {
      if (this.echartsParams.businessIds[0] === "") {
        getAppList().then((res) => {
          if (!res.data) {
            this.departments1 = [];
            return;
          }
          this.departments1 = res.data;
        });
      } else {
        this.getAdminAndAppListByBusinessId({
          businessId: this.echartsParams.businessIds[0],
        });
      }
    },
    // 广告位
    getPlace() {
      getPlaceList().then((res) => {
        if (res.code !== 200) return;
        if (!res.data) {
          this.departments2 = [];
          return;
        }
        this.departments2 = res.data;
      });
    },
    // async getPlaceListByAppId() {
    //   if (this.echartsParams.platIdList.length === 0) return;
    //   let resp = await appToAdvert(this.echartsParams.appIdList);
    //   if (resp.code !== 200) return;
    //   this.departments2 = resp.data;
    // },
    // 广告样式
    getPosition() {
      getPositionList().then((res) => {
        this.options1 = res.data;
      });
    },
    // 广告源
    getPlatOptionList() {
      platListByUser({
        id: this.echartsParams.adminUserIds[0],
        businessId: this.echartsParams.businessIds[0],
      }).then((res) => {
        this.departments3 = res.data;
      });
    },
    getSTime() {
      if (this.time) {
        this.echartsParams.dateStart = this.time[0];
        this.echartsParams.dateEnd = this.time[1];
      } else {
        this.echartsParams.dateStart = "";
        this.echartsParams.dateEnd = "";
        this.time = [];
      }
    },

    handleSearch() {
      this.echartsParams.page = 1;
      if (this.echartsParams.businessIds[0] === "") {
        this.echartsParams.businessIds = [];
      }
      // 维度
      this.echartsParams.groupByList = [];
      this.echartsParams.groupByList.push("a.date");
      // 商务维度
      if (this.showTable.business) {
        this.echartsParams.groupByList.push("u.business_id");
      }
      // 操作系统
      if (this.showTable.os) {
        this.echartsParams.groupByList.push("app.os");
      }
      // 应用名称
      if (this.showTable.appname) {
        this.echartsParams.groupByList.push("a.app_id");
      }
      // 账户名称
      if (this.showTable.account) {
        this.echartsParams.groupByList.push("app.admin_user");
      }
      this.getHomeEcharts();
      this.getTableList();
    },

    echartsInit() {
      let myEcharts = echarts.init(this.$refs.box);
      myEcharts.setOption(this.option);
      this.myEcharts = myEcharts;
    },
    getHomeEcharts() {
      this.loadingEcharts = true;
      homeEcharts(this.echartsParams).then((res) => {
        if (res.code !== 200) return;
        // 无数据

        if (!res.data) {
          for (let j = 0; j < this.option.series.length; j++) {
            this.option.series[j].data = [];
            this.option.series[j].name = "";
          }
          this.option = Object.assign({}, this.nodataOption);
          this.loadingEcharts = false;
          this.echartsInit();
          this.ecjartsList = [];
          return;
        }

        setTimeout(() => {
          this.loadingEcharts = false;
        }, 400);
        this.option.xAxis.data = res.data.lable;
        res.data.list.forEach((e) => {
          if (e.field === "estimatedRevenue") {
            e.data.forEach((item, index) => {
              e.data[index] = item.toFixed(2);
            });
          }
          if (e.field === "unitRevenue") {
            e.data.forEach((item, index) => {
              e.data[index] = item.toFixed(2);
            });
          }
        });

        this.ecjartsList = res.data.list;
        this.changeEcharts();
      });
    },
    // 点击复选框
    changeEcharts() {
      for (let j = 0; j < this.option.series.length; j++) {
        this.option.series[j].data = [];
        this.option.series[j].name = "";
      }
      for (let i = 0; i < this.checkList.length; i++) {
        // unitRevenue              50k
        // impression               500k
        // dua                      5k
        // arpu                     1
        // aipau                    15
        // estimatedRevenue         50k
        // estimatedRevenueEcpm     15
        // this.option.yAxis
        for (let j = 0; j < this.ecjartsList.length; j++) {
          if (this.checkList[i] === this.ecjartsList[j].field) {
            this.option.series[j].data = this.ecjartsList[j].data;
            this.option.series[j].name = this.ecjartsList[j].name;
            let yAxisIndex = this.option.series[j].yAxisIndex;
            // 判断改图表中显示的数据是否有三个
            if (this.checkList.length >= 3) {
              // 大于三个，刻度和数值不显示
              this.option.yAxis[yAxisIndex].position = "";
              // 刻度
              this.option.yAxis[yAxisIndex].splitLine.show = false;

              this.option.yAxis[yAxisIndex].axisTick.show = false;
              // 数值
              this.option.yAxis[yAxisIndex].axisLabel.show = false;
              // 添加一个背景刻度线
              if (i === 0) {
                this.option.yAxis[yAxisIndex].splitLine.show = true;
              }
            } else {
              // 小于三个，分别给他们加上位置、数值和刻度显示
              this.option.yAxis[yAxisIndex].axisTick.show = true;
              this.option.yAxis[yAxisIndex].axisLabel.show = true;

              if (i == 0) {
                // 添加一个背景刻度线
                this.option.yAxis[yAxisIndex].splitLine.show = true;
                // 第一个的y坐标放在左边
                this.option.yAxis[yAxisIndex].position = "left";
              } else if (i == 1) {
                this.option.yAxis[yAxisIndex].splitLine.show = false;

                // 第二个的y坐标放在右边
                this.option.yAxis[yAxisIndex].position = "right";
              } else {
                this.option.yAxis[yAxisIndex].splitLine.show = false;
              }
            }
          }
        }
      }
      this.echartsInit();
    },
  },
};
</script>

<style lang="scss" scoped>
body {
  // width: 100%;
  overflow-x: scroll;
}
.dashboard-editor-container {
  position: relative;

  .filter-container {
    background-color: #fff;
    padding-bottom: 0;

    .filter-item {
      margin: 0 20px 20px 0;
    }
  }

  .earcth {
    display: flex;
    width: 100%;
    margin-top: 20px;
    // overflow-x: scroll;
    background-color: #fff;
    .eartch_left {
      width: 80%;
      // height: 380px;
      // background-color: blue;
    }
    .data_right {
      flex: 1;

      h3 {
        font-weight: 400;
        height: 40px;
        line-height: 40px;
        color: #333;
        border: 1px solid rgb(214, 208, 208);
        border-bottom: none;
        box-sizing: border-box;
        color: #333;
        font-size: 14px;
        padding-left: 30px;
        background-color: #f5f7fa;
      }
      ul {
        height: 300px;
        overflow-y: scroll;
        border: 1px solid rgb(214, 208, 208);
        li {
          height: 40px;
          line-height: 40px;
          padding-left: 20px;
          box-sizing: border-box;
          border-bottom: 1px solid rgb(214, 208, 208);
        }
      }
    }
  }
  .searchTiaojian {
    width: 100%;
    background-color: red;
    margin-bottom: 15px;
  }
}
.box {
  font-size: 22px;
}
// 单选框文字样式
// 展示
::v-deep.impression .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #0055ff;
}
// DAU
::v-deep.dau .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #ffab31;
}
// 预估收益
::v-deep
  .estimatedRevenue
  .el-checkbox__input.is-checked
  + .el-checkbox__label {
  color: #39da61;
}
// 预估eCPM
::v-deep
  .estimatedRevenueEcpm
  .el-checkbox__input.is-checked
  + .el-checkbox__label {
  color: #ff6688;
}
// 展示/DAU
::v-deep.aipau .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #a8a8ff;
}
// 收益
::v-deep.unitRevenue .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #de7af9;
}
// 人均收益
::v-deep.arpu .el-checkbox__input.is-checked + .el-checkbox__label {
  color: #ff746c;
}

// ecpm
::v-deep.ecpm .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(0, 118, 143);
}
// deu
::v-deep.deu .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(76, 180, 231);
}
// 渗透率
::v-deep.permeability .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(255, 192, 159);
}
// 流量请求
::v-deep.request .el-checkbox__input.is-checked + .el-checkbox__label {
  color: rgb(145, 78, 0);
}

// 单选框框样式
// 展示
::v-deep.impression .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #0055ff;
  background-color: #0055ff;
}
// DAU
::v-deep.dau .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #ffab31;
  background-color: #ffab31;
}
// 预估收益
::v-deep.estimatedRevenue .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #39da61;
  background-color: #39da61;
}
// 预估eCPM
::v-deep
  .estimatedRevenueEcpm
  .el-checkbox__input.is-checked
  .el-checkbox__inner {
  border-color: #ff6688;
  background-color: #ff6688;
}
// 展示/DAU
::v-deep.aipau .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #a8a8ff;
  background-color: #a8a8ff;
}
// 收益
::v-deep.unitRevenue .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #de7af9;
  background-color: #de7af9;
}
// 人均收益
::v-deep.arpu .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: #ff746c;
  background-color: #ff746c;
}
// ecpm
::v-deep.ecpm .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(0, 118, 143);
  background-color: rgb(0, 118, 143);
}
// deu
::v-deep.deu .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(76, 180, 231);
  background-color: rgb(76, 180, 231);
}
// 渗透率
::v-deep.permeability .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(255, 192, 159);
  background-color: rgb(255, 192, 159);
}
// 流量请求
::v-deep.request .el-checkbox__input.is-checked .el-checkbox__inner {
  border-color: rgb(145, 78, 0);
  background-color: rgb(145, 78, 0);
}

// 搜索 应用

::v-deep.el-checkbox.is-checked .el-checkbox__label {
  color: #606266;
}
::v-deep.dashboard-editor-container .app_option.dashboard-editor-container {
  border: 1px solid #000;
  background-color: red;
  width: 400px;
}
.app_option .appsearch .search-left {
  box-sizing: border-box;
}
.app_option .appsearch .search-left .btn {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 30px;
  background-color: #fff;
  z-index: 10;
  padding-top: 5px;
  padding-left: 5px;
}
.app_option .appsearch .search-left .input {
  position: absolute;
  top: 30px;
  left: 0;
  width: 95%;
  z-index: 10;
  margin-bottom: 10px;
  margin-left: 5px;
  background-color: #fff;
  margin-bottom: 10px;
}
.app_option .appsearch .search-left .checkbox_group {
  margin-top: 70px;
  // background-color: #40c9c6;
}
.app_option .appsearch .search-left .checkbox_group li {
  display: block;
  height: 50px;
}
.app_option .appsearch .search-left .checkbox_group li::after {
  display: none;
}
.app_option .appsearch .search-left .checkbox_group .name {
  font-weight: 700;
}

// table列表
.table {
  background-color: #fff;
  padding: 30px 3% 50px 3%;
}
.showbox {
  margin: 20px 0 20px 0;
}
.showbox h2 {
  display: inline-block;
  margin: 0 20px;
}
.showbox .el-checkbox {
  padding-bottom: 10px;
}
::v-deep.table .el-table tr:nth-of-type(1) {
  background-color: #eee;
}
// ::v-deep.table .el-table__fixed-header-wrapper .el-table tr:nth-of-type(1){
//   background-color: #f40;
// }
// 日期选择框
// ::v-deep.dashboard-editor-container   .el-range-editor--medium .el-range-input{
//   font-size: 12px;
// }
// ::v-deep.dashboard-editor-container   .el-range-editor--mini .el-range-input{
//   font-size: 12px;
// }
// new app
</style>
