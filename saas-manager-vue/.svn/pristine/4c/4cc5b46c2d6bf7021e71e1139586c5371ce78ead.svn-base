<template>
  <div class="register-container">
    <!-- form表单 -->
    <div class="registerform">
      <el-form
        :model="form"
        :rules="rules"
        ref="formRef"
        class="form"
        label-width="30px"
      >
        <el-form-item style="height: 7%" label-width="100px">
          <h2 class="title">用户注册</h2>
        </el-form-item>
        <el-form-item prop="username">
          <!-- <label slot="label">账号名称</label> -->

          <el-input placeholder="请输入账号名称" v-model="form.username">
            <!-- <i slot="prefix" class="el-icon-user" /> -->

            <i slot="prefix" class="iconfont">&#xe751;</i>
          </el-input>
        </el-form-item>

        <el-form-item prop="email">
          <!-- <label slot="label">注册邮箱</label> -->

          <el-input placeholder="请输入注册邮箱" v-model="form.email">
            <i slot="prefix" class="iconfont">&#xe724;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="password">
          <!-- <label slot="label">密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码</label> -->
          <el-input
            type="password"
            placeholder="请输入密码"
            v-model="form.password"
          >
            <i slot="prefix" class="iconfont">&#xe639;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="confirmPassword">
          <!-- <label slot="label">确认密码</label> -->

          <el-input
            type="confirmPassword"
            placeholder="请确认密码"
            v-model="form.confirmPassword"
          >
            <i slot="prefix" class="iconfont">&#xe639;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="company">
          <!-- <label slot="label">公司名称</label> -->

          <el-input
            type="company"
            placeholder="请输入公司名称"
            v-model="form.company"
          >
            <i slot="prefix" class="iconfont">&#xe769;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="contact">
          <!-- <label slot="label">联&nbsp;&nbsp;系&nbsp;&nbsp;人</label> -->

          <el-input
            type="contact"
            placeholder="请输入联系人"
            v-model="form.contact"
          >
            <i slot="prefix" class="iconfont">&#xe814;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="mobile">
          <!-- <label slot="label">手机号码</label> -->

          <el-input
            type="mobile"
            placeholder="请输入手机号码"
            v-model="form.mobile"
          >
            <i slot="prefix" class="iconfont">&#xe678;</i>
          </el-input>
        </el-form-item>
        <el-form-item prop="learnWay">
          <!-- <label slot="label">了解途径</label> -->

          <el-select
            clearable
            style="width: 80%"
            placeholder="请选择了解途径"
            v-model="form.learnWay"
          >
            <i slot="prefix" class="iconfont">&#xe77a;</i>

            <el-option :value="1" label="Medpro官网"></el-option>
            <el-option :value="2" label="Medpro公众号"></el-option>
            <el-option :value="3" label="Medpro商务"></el-option>
            <el-option :value="4" label="朋友推荐"></el-option>
            <el-option :value="5" label="网络文章"></el-option>
            <el-option :value="6" label="其他"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item>
          <!-- <label slot="label">主营应用</label> -->

          <el-input
            type="mainApp"
            placeholder="请输入主营应用"
            v-model="form.mainApp"
          >
            <i slot="prefix" class="iconfont">&#xe600;</i>
          </el-input>
        </el-form-item>
        <!-- <el-form-item>

          <el-input
            type="trade"
            placeholder="请输入所属行业"
            v-model="form.trade"
          >
            <i slot="prefix" class="iconfont" >&#xe75a;;</i>

          </el-input>
        </el-form-item> -->
        <el-form-item>
          <el-button
            type="primary"
            style="width: 80%; height: 40px; border-radius: 30px"
            @click="onSubmit('formRef')"
            :loading="isLoading"
            :disabled="disabled"
            >注册</el-button
          >
        </el-form-item>
        <el-form-item label-width="30px">
          已有账号，
          <router-link style="color: #46a6ff" :to="{ path: '/login' }"
            >去登录</router-link
          >
        </el-form-item>
      </el-form>
    </div>
    <!-- 右侧图片 -->
    <div class="left-img">
      <el-image
        class="logo"
        style="width: 200px"
        :src="'https://creative.bxsnews.com/medpro/imgs/medpro_logo.png'"
      ></el-image>
    </div>
  </div>
</template>

<script>
import { register } from "@/api/user.js";

export default {
  data() {
    // 是否包含一位数字
    const regNumber = /(?=.*[\d])/;
    // 是否包含一位小写字母
    const regLetter = /(?=.*[a-z])/;
    // 是否包含一位大写字母
    const regLetters = /(?=.*[A-Z])/;
    // 是否包含一位特殊字符
    const regCharacter =
      /(?=.*[`~!@#$%^&*()_\-+=<>?:"{}|,.\/;'\\[\]·~！@#￥%……&*（）——\-+={}|《》？：“”【】、；‘’，。、])/;
    // 校验新密码
    const validatePass = (rule, value, callback) => {
      if (value === "") {
        callback(new Error("新密码不能为空！请重新输入"));
      } else {
        if (value.length > 16) {
          callback(new Error("密码长度不超过16个字符。"));
        } else if (value.length < 8) {
          callback(new Error("密码不低于8位，包含大小字母、数字、特殊符号"));
        } else {
          if (!/^[a-zA-Z\d]{1}/.test(value)) {
            callback(new Error("密码必须以英文大小写字母或数字开头！"));
          } else {
            if (!regNumber.test(value)) {
              callback(
                new Error("密码不低于8位，包含大小字母、数字、特殊符号!")
              );
              // callback(new Error("密码必须包含一位数字!"));
            } else if (!regLetter.test(value)) {
              callback(
                new Error("密码不低于8位，包含大小字母、数字、特殊符号!")
              );
              // callback(new Error("密码必须包含一位小写字母!"));
            } else if (!regLetters.test(value)) {
              callback(
                new Error("密码不低于8位，包含大小字母、数字、特殊符号!")
              );
              // callback(new Error("密码必须包含一位大写字母!"));
            } else if (!regCharacter.test(value)) {
              callback(
                new Error("密码不低于8位，包含大小字母、数字、特殊符号!")
              );
              // callback(new Error("密码必须包含一位特殊字符!"));
            } else {
              callback();
            }
          }
        }
      }
    };
    // 校验确认密码
    const validateConfirm = (rule, value, callback) => {
      console.log(value);
      if (value === "" && this.form.password !== "") {
        callback(new Error("请输入确认密码"));
        return;
      }
      if (value !== this.form.password) {
        callback(new Error("密码确认错误！请重新确认"));
      } else {
        callback();
      }
    };
    const validatorLearnWay = (rule, value, callback) => {
      console.log(value);
      if (value === "") {
        callback(new Error("请选择了解途径"));
      } else {
        callback();
      }
    };

    return {
      isLoading: false,
      disabled: false,
      form: {
        username: "",
        email: "",
        password: "",
        confirmPassword: "",
        company: "",
        contact: "",
        mobile: "",
        learnWay: "",
        mainApp: "",
        trade: "",
      },
      rules: {
        username: [
          {
            required: true,
            message: "请填写用户名",
            trigger: "blur",
          },
        ],

        email: [
          {
            required: true,
            message: "请填写邮箱,作为登录账号名",
            trigger: "blur",
          },
          {
            message: "邮箱无效",
            trigger: "blur",
            pattern: /^\w+@[a-z0-9]+\.[a-z]{2,4}$/,
          },
        ],
        password: [
          { required: true, trigger: "blur", validator: validatePass },
        ],
        confirmPassword: [
          { required: true, trigger: "blur", validator: validateConfirm },
        ],
        company: [
          {
            required: true,
            message: "请输入公司名称",
            trigger: "blur",
          },
        ],
        contact: [
          {
            required: true,
            message: "请输入联系人",
            trigger: "blur",
          },
        ],
        mobile: [
          {
            required: true,
            message: "请填写手机号",
            trigger: "blur",
          },
          {
            message: "手机号无效",
            trigger: "blur",
            pattern: /^(13\d|14[579]|15[^4\D]|17[^49\D]|18\d)\d{8}$/,
          },
        ],
        learnWay: [
          {
            required: true,
            message: "请选择了解途径",
            trigger: "change",
            validator: validatorLearnWay,
          },
        ],
      },
    };
  },
  methods: {
    async onSubmit(ref) {
      this.$refs[ref].validate((valid) => {
        if (valid) {
          this.isLoading = true;
          this.disabled = true;
          register(this.form).then((resp) => {
            if (resp.code !== 200) {
              this.isLoading = false;
              this.disabled = false;
              return;
            }
            this.$message.success("注册成功！");
            this.$router.push("/login");
          });
        }
        this.isLoading = false;
        this.disabled = false;
      });
    },
  },
};
</script>

<style lang="scss" scoped>
.register-container {
  width: 100%;
  height: 100%;
  overflow: hidden;

  background-image: url("../../assets/register_bg.png");
  background-repeat: no-repeat;
  background-size: 100%;
  display: flex;
  flex-direction: row-reverse;
  .left-img {
    position: relative;
    margin-top: 12rem;
    margin-left: 100px;
    width: 40rem;
    height: 40rem;
    // background-color: antiquewhite;
    background-image: url("../../assets/register_left.png");
    background-repeat: no-repeat;
    background-size: 100%;
    .logo {
      z-index: 10000;
      display: inline-block;
      position: absolute;
      top: -100px;
      left: -50px;
    }
  }
  .registerform {
    width: 50rem;
    height: 48rem;
    // background-color: aquamarine;
    display: flex;
    padding-right: 12rem;
    // align-content: center;
    justify-content: right;
    .form {
      width: 70%;
      background-color: rgba(256, 256, 256, 1);

      border-radius: 10px;
      padding-left: 30px;
      margin: 50px 0px 0 20px;
      // border: 1px solid #000;
      .title {
        margin-top: 20px;
        font-size: 24px;
      }
      .el-input {
        margin: 0;
        // border: 3px solid red;
      }
      label {
        display: inline-block;
        width: 60px;
        text-align: center;
      }
      .el-input {
        width: 80%;
      }
    }
  }
}
.el-form-item {
  margin-bottom: 17px;
}
::v-deep.el-input input,
::v-deep.el-select input {
  border: 1px solid #e7e7e7;
  height: 40px;
  font-weight: 600;
}

::v-deep.el-input input::-webkit-input-placeholder,
::v-deep.el-select input::-webkit-input-placeholder {
  color: #5b5c5f;
  font-weight: 400;
}
@font-face {
  font-family: "iconfont"; /* project id 3203638 */
  src: url("");
  src: url("?#iefix") format("embedded-opentype"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.woff2") format("woff2"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.woff") format("woff"),
    url("//at.alicdn.com/t/font_3203638_60xjvqg2gjr.ttf") format("truetype"),
    url("#iconfont") format("svg");
}
.iconfont {
  font-family: "iconfont" !important;
  font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
  line-height: 42px;
  color: #5b5c5f;
}
</style>>
