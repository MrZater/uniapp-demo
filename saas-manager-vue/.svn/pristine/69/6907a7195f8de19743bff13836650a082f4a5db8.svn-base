<template>
  <div class="audit-container">
    <div class="search">
      <div class="search_top">
        <el-row :gutter="10">
          <el-col v-if="$store.state.user.roles[0] === 'SUPER_ADMIN'" :span="4"
            ><CustSelectOne
              @handleSelect="selectListhandleAdmin"
              :model="query.userId"
              :word="'账户'"
              :width="180"
              :allData="adminList"
          /></el-col>
          <el-col :span="4"
            ><CustSelectOne
              @handleSelect="selectListhandlePlat"
              :model="query.platId"
              :word="'广告源'"
              :width="180"
              :clear="true"
              :allData="platList"
          /></el-col>
          <el-col :span="4"
            ><CustSelectOne
              @handleSelect="selectListhandlePosition"
              :model="query.positionId"
              :word="'广告样式'"
              :width="180"
              :clear="true"
              :allData="positionList"
          /></el-col>
          <el-col :span="4">
            <el-select
              clearable
              v-model="query.type"
              placeholder="请选择素材类型"
            >
              <el-option key="1" label="图片" :value="1" />
              <el-option key="2" label="视频" :value="2" />
            </el-select>
          </el-col>
          <el-col :span="4" v-if="$store.state.user.roles[0] !== 'AUDITOR'">
            <CustSelectApp
              :word="'审核人员'"
              :width="450"
              :allData="auditUserList"
              @selectListhandle="selectListhandleAudit"
            />
          </el-col>
        </el-row>
      </div>
      <div class="search_bottom">
        <el-row :gutter="10">
          <el-col :span="8">
            <span style="display: inline-block ;font-size:14px"
              >{{ query.auditSts === "0" ? "上传" : "审核" }}时间：</span
            >
            <el-date-picker
              style="display: inline-block; width: 70%"
              v-model="date"
              :clearable="false"
              class="item"
              type="daterange"
              value-format="yyyy-MM-dd"
              align="right"
              unlink-panels
              range-separator="至"
              start-placeholder="开始日期"
              end-placeholder="结束日期"
              :picker-options="pickerOptions"
              @change="getSTimeChange"
            />
          </el-col>
          <el-col :span="6"
            ><el-input
              placeholder="标题、描述、标签"
              clearable
              v-model="query.keyWords"
          /></el-col>
          <el-col :span="4">
            <el-button type="primary" @click="handleSearch">查看</el-button>
          </el-col>
        </el-row>
      </div>
    </div>
    <div class="material">
      <div class="tab">
        <div class="tab_box">
          <el-tabs v-model="query.auditSts" @tab-click="handleClick">
            <el-tab-pane label="待审核" name="0"></el-tab-pane>
            <el-tab-pane label="已通过" name="1"></el-tab-pane>
            <el-tab-pane label="已拒绝" name="2"></el-tab-pane>
          </el-tabs>
        </div>

        <div class="btn">
          <el-button type="primary " @click="handleGrage">素材等级</el-button>
        </div>
      </div>
      <div class="batchAudit" v-if="materialList.length > 0">
        <div class="flex_item number">
          <p>
            {{
              query.auditSts == 0
                ? "待审核"
                : query.auditSts == 1
                ? "已通过"
                : query.auditSts == 2
                ? "已拒绝"
                : ""
            }}素材共有{{ total }}张
          </p>
        </div>
        <div class="flex_item">
          <el-checkbox v-model="checkAll" @change="handleCheckAll"
            >全选</el-checkbox
          >
        </div>
        <div class="flex_item">
          <el-button
            v-if="query.auditSts !== '1'"
            size="mini"
            type="primary "
            :disabled="!hasChecked || !allowOperate"
            @click="handleBatchAudit(1)"
            >批量通过</el-button
          >
        </div>
        <div class="flex_item">
          <el-button
            v-if="query.auditSts !== '2'"
            size="mini"
            type=" "
            :disabled="!hasChecked || !allowOperate"
            @click="handleBatchAudit(2)"
            >批量拒绝</el-button
          >
        </div>
        <div class="flex_item">
          <el-button
            v-if="query.auditSts == '0'"
            size="mini"
            type="warning"
            :disabled="!hasChecked || !allowOperate"
            @click="handleBatchAudit(3)"
            >批量通过并拒绝未选</el-button
          >
        </div>
      </div>
      <div class="material_list" v-if="materialList.length > 0">
        <div class="items" :gutter="15">
          <div
            v-for="(item, i) in materialList"
            :key="i"
            class="item"
            :span="6"
          >
            <div class="material_box">
              <div class="image">
                <div class="svgicon" @click="handleFull(item)">
                  <svg-icon icon-class="full"></svg-icon>
                </div>
                <div class="checked">
                  <el-checkbox v-model="item.ischecked"></el-checkbox>
                </div>
                <div class="todo">
                  <span
                    v-show="query.auditSts !== '1'"
                    @click="handleResolve(item)"
                    >通过</span
                  >
                  <span @click="handleDetails(item)">详情</span>
                  <span
                    v-show="query.auditSts !== '2'"
                    @click="handleReject(item)"
                    >拒绝</span
                  >
                </div>
                <div class="image_box">
                  <img
                    v-if="item.type === 1"
                    @click="item.ischecked = true"
                    v-lazy="item.creativeUrl"
                    alt=""
                    :src="item.creativeUrl"
                  />
                  <video
                    @click="item.ischecked = true"
                    v-if="item.type == 2"
                    controlsList="nodownload"
                    :ref="'video' + item.id"
                    noremote
                    footbar
                    disablePictureInPicture
                    noremoteplayback
                    nofullscreen
                    :controls="false"
                    :autoplay="false"
                    :src="item.creativeUrl"
                    v-lazy="item.creativeUrl"
                    :loop="true"
                  ></video>
                </div>

                <i
                  v-if="item.type == 2"
                  @click="handlePlay(item.id)"
                  :class="{
                    play: true,
                    'el-icon-video-play': !isPlay[item.id],
                    'el-icon-video-pause': isPlay[item.id],
                  }"
                ></i>
              </div>
              <div class="uptime" >
                <span v-if="query.auditSts == '0'"
                  ><p>上传时间：</p>

                  {{ item.uploadTime.replace("T", "   ") }}</span
                >
                <span v-else>
                  <p>审核时间：</p>
                  {{ item.auditTime.replace("T", "   ") }}</span
                >
              </div>
              <div class="level">
                <p>等级：</p>
                <el-radio-group
                  v-model="item.level"
                  size="mini"
                  @change="item.ischecked = true"
                >
                  <el-radio-button label="A">A</el-radio-button>
                  <el-radio-button label="B">B</el-radio-button>
                  <el-radio-button label="C">C</el-radio-button>
                  <el-radio-button label="D">D</el-radio-button>
                </el-radio-group>
              </div>
              <div class="downloadUrl">
                <a
                  :href="item.landingPage ? item.landingPage : item.downloadUrl"
                  target="_blank"
                >
                  <svg-icon class="svgicon" icon-class="linkto"></svg-icon
                  >{{ item.landingPage ? item.landingPage : item.downloadUrl }}
                </a>
              </div>
            </div>
          </div>
        </div>
        <el-pagination
          style="margin-top: 15px; margin-bottom: 50px"
          @current-change="handleCurrentChange"
          @size-change="handleSizeChange"
          :current-page="query.page"
          :page-size="query.limit"
          layout="total, sizes, prev, pager, next, jumper"
          :page-sizes="[5, 10, 20, 50, 100]"
          :total="total"
        ></el-pagination>
      </div>
      <Empty class="empty" v-else></Empty>
    </div>
    <!-- 全屏查看素材弹框 -->
    <div class="full">
      <el-dialog
        :modal="true"
        :modal-append-to-body="false"
        center
        :visible.sync="fullDialog"
        custom-class="fulldialog"
        width="40%"
      >
        <div class="dialogbox">
          <video
            v-if="fullQuery.type == '2'"
            controls
            :src="fullQuery.url"
          ></video>
          <img v-if="fullQuery.type == '1'" :src="fullQuery.url" alt="" />
        </div>
      </el-dialog>
    </div>
    <div class="details">
      <el-dialog
        :modal="true"
        :destroy-on-close="true"
        :modal-append-to-body="false"
        @close="closeDetailDialog"
        center
        :title="
          query.auditSts == '0'
            ? '待审核素材详情'
            : query.auditSts == '1'
            ? '已通过素材详情'
            : query.auditSts == '2'
            ? '已拒绝素材详情'
            : ''
        "
        :visible.sync="detailsDialog"
        width="70%"
      >
        <div class="details_box">
          <div class="left">
            <video
              v-if="detailsinfo.type == '2'"
              controls
              :src="detailsinfo.creativeUrl"
            ></video>
            <img
              v-if="detailsinfo.type == '1'"
              :src="detailsinfo.creativeUrl"
              alt=""
            />
          </div>
          <div class="right">
            <div class="box">
              <h3>基本信息</h3>
              <p><span class="title">素材ID：</span>{{ detailsinfo.id }}</p>
              <p>
                <span class="title">素材标题：</span>{{ detailsinfo.title }}
              </p>
              <p class="description">
                <span class="title">素材描述：</span
                >{{ detailsinfo.description }}
              </p>
              <p class="downloadUrl">
                <span class="title">下载地址：</span
                ><a target="_blank" :href="detailsinfo.downloadUrl">{{
                  detailsinfo.downloadUrl
                }}</a>
              </p>
              <p class="landingPage">
                <span class="title">落地页：</span
                ><a target="_blank" :href="detailsinfo.landingPage">{{
                  detailsinfo.landingPage
                }}</a>
              </p>
              <p class="tags">
                <span class="title">标签：</span
                ><WordTransfer
                  @addTags="detailsinfo.tags = $event"
                  @removeTag="detailsinfo.tags = $event"
                  :model="detailsinfo.tags"
                ></WordTransfer>
              </p>
              <span class="title"
                >等级：
                <el-radio-group v-model="detailsinfo.level" size="mini">
                  <el-radio-button label="A">A</el-radio-button>
                  <el-radio-button label="B">B</el-radio-button>
                  <el-radio-button label="C">C</el-radio-button>
                  <el-radio-button label="D">D</el-radio-button>
                </el-radio-group></span
              >
              <p>
                <span class="title">审核：</span>
                <el-radio v-model="detailsinfo.auditSts" label="1"
                  >通过</el-radio
                >
                <el-radio v-model="detailsinfo.auditSts" label="2"
                  >拒绝</el-radio
                >
              </p>
            </div>
          </div>
        </div>
        <span slot="footer" class="details-footer" v-if="allowOperate">
          <el-button type="plain" @click="detailsDialog = false"
            >取消</el-button
          >
          <el-button type="primary" @click="handleSumbitDetails"
            >提交</el-button
          >
        </span></el-dialog
      >
    </div>
    <div class="grade">
      <el-dialog title="素材等级" :visible.sync="gradeDialog">
        <el-table
          class="tableBox"
          :data="gradeTable"
          stripe
          style="width: 100%"
        >
          <el-table-column prop="date" label="素材分级" align="center">
          </el-table-column>
          <el-table-column prop="name" label="描述" align="center">
          </el-table-column>
          <el-table-column prop="address" label="展示的素材" align="center">
          </el-table-column>
        </el-table>
      </el-dialog>
    </div>
  </div>
</template>

<script>
import {
  apiPlatformList,
  auditUserList,
  getMaterialList,
  auditMaterial,
  updateTags,
  getAdminIDListInMaterial,
} from "@/api/material";
import { getPositionList } from "@/api/common";
import { adminDateOption } from "@/utils/options";

import CustSelectOne from "@/components/CustSelectOne";
import CustSelectApp from "@/components/CustSelectApp";
import WordTransfer from "@/components/WordTransfer";
import Empty from "@/components/empty";

export default {
  name: "audit",
  components: { CustSelectOne, CustSelectApp, Empty, WordTransfer },
  data() {
    return {
      aaa: require("@/assets/no-data.png"),
      pickerOptions: adminDateOption ? adminDateOption : [],
      total: 0, // 数据总数
      userId: "", // 账户id
      checkAll: false, // 素材是否全选
      query: {
        page: 1, // 页码
        limit: 20, // 页容量
        userId: "", // 账户id
        platId: "", // 广告源id
        positionId: "", // 广告样式id
        auditSts: 0, // 审核状态
        userIds: [], // 审核人员id
        type: "", // 素材种类
        keyWords: "", // 关键字
        beginDate: "", // 开始时间
        endDate: "", // 结束时间
      },
      adminList: [], // 账户列表
      platList: [], // 广告源列表
      positionList: [], // 广告样式列表
      auditUserList: [], // 审核人员列表
      date: [], // 日期
      materialList: [], // 素材列表
      fullDialog: false, // 全屏查看素材弹窗
      fullQuery: {
        // 全屏弹框信息
        url: "",
        type: "",
      },
      detailsDialog: false, // 素材详情弹框
      detailsinfo: {
        // 素材详情弹框信息
        creativeUrl: "",
        id: "",
        title: "",
        description: "",
        downloadUrl: "",
        landingPage: "",
        tags: [],
        level: "",
        auditSts: "",
      },
      isPlay: {}, // 素材列表所有素材是否正在播放
      gradeDialog: false, // 等级详情弹框
      // 等级详情
      gradeTable: [
        {
          date: " A",
          name: "适合广泛观众看的内容",
          address: "所有人可以看",
        },
        {
          date: "B",
          name: "适合家长陪同下观看的内容",
          address: "成年人、青年人、儿童可看",
        },
        {
          date: "C",
          name: "适合青少年观看的内容",
          address: "青少年、成年人可看",
        },
        {
          date: "D",
          name: "适合成年人及以上观看的内容",
          address: "成年人可看",
        },
      ],
    };
  },
  watch: {
    // 深度监听素材数组中的checkedAll，判断是否全选
    materialList: {
      handler(val) {
        let checkedAll = true;
        val.forEach((item) => {
          if (!item.ischecked) {
            checkedAll = false;
          }
        });
        this.checkAll = checkedAll;
      },
      deep: true,
    },
  },
  async mounted() {
    this.initDate();
    await this.getAdminList();
    await this.getPlatList();
    await this.getPosition();
    await this.getAuditUserList();
    this.handleGetMaterial();
  },
  computed: {
    // 是否有素材被选中
    hasChecked() {
      let has = false;
      this.materialList.forEach((item) => {
        if (item.ischecked) {
          has = true;
        }
      });
      return has;
    },
    allowOperate() {
      return this.$store.getters.allowOperate;
    },
  },
  methods: {
    // 获取账户列表列表
    async getAdminList() {
      let resp = await getAdminIDListInMaterial();
      if (resp.code !== 200) return;
      let arr = resp.data;
      arr.forEach((item) => {
        item.id = "" + item.id;
      });
      this.adminList = arr;

      if (this.$store.state.user.roles[0] === "SUPER_ADMIN") {
        this.query.userId = this.adminList[0].id.toString();
      }
    },
    // 获取广告位列表
    async getPlatList() {
      let resp = await apiPlatformList();
      if (resp.code !== 200) return;
      resp.data.forEach((item) => {
        item.id = "" + item.id;
      });
      this.platList = resp.data;
    },
    // 获取广告样式列表
    getPosition() {
      getPositionList().then((res) => {
        if (res.code !== 200) return;
        if (!res.data) {
          res.data = [];
        }
        res.data.forEach((item) => [(item.id = "" + item.id)]);
        this.positionList = res.data;
      });
    },
    // 获取审核人员列表
    async getAuditUserList() {
      let resp = await auditUserList(this.query.userId);
      if (resp.code !== 200) return;
      resp.data.forEach((item) => {
        item.name = item.username;
      });
      this.auditUserList = resp.data;
    },
    // 初始化时间
    initDate() {
      let time = new Date().getTime();
      let year = new Date(time).getFullYear();
      let month = new Date(time).getMonth() + 1;
      let day = new Date(time).getDate();

      let str = `${year}-${month < 10 ? "0" + month : month}-${
        day < 10 ? "0" + day : day
      }`;
      this.date = [str, str];
      this.query.endDate = str;
      this.query.beginDate = str;
    },
    // 账户选择事件
    selectListhandleAdmin(val) {
      this.query.userId = "" + val;
      this.getAuditUserList();
    },
    // 广告位选择事件
    selectListhandlePlat(val) {
      this.query.platId = val;
    },
    // 广告样式选择事件
    selectListhandlePosition(val) {
      this.query.positionId = val;
    },
    // 审核人员选择事件
    selectListhandleAudit(val) {
      this.query.userIds = val;
    },
    // 日期改变事件
    getSTimeChange() {
      this.query.endDate = this.date[1];
      this.query.beginDate = this.date[0];
    },
    handleSearch() {
      this.query.page = 1;
      this.handleGetMaterial();
    },
    // 获取素材列表
    async handleGetMaterial() {
      this.$bus.$emit("totop");
      // this.materialList = [];
      let query = JSON.parse(JSON.stringify(this.query));
      if (query.platId == "所有广告源") {
        query.platId = "";
      }
      if (query.positionId == "所有广告样式") {
        query.positionId = "";
      }
      let resp = await getMaterialList(query);
      if (resp.code !== 200) return;
      resp.data.items.forEach((item) => {
        item.ischecked = false;
      });
      this.userId = this.query.userId;
      this.materialList = resp.data.items;
      this.total = resp.data.total;
      this.checkAll = false;
      this.isPlay = {};
    },
    // tabs按钮事件
    handleClick() {
      this.handleGetMaterial();
    },
    // 全屏查看素材
    handleFull(item) {
      this.fullQuery.url = item.creativeUrl;
      this.fullQuery.type = item.type;
      this.fullDialog = true;
    },
    // 改变页码事件
    handleCurrentChange(val) {
      this.query.page = val;
      this.handleGetMaterial();
    },
    handleSizeChange(val) {
      this.query.limit = val;
      this.handleGetMaterial();
    },
    // 审核素材
    async auditMaterial(data) {
      let resp = await auditMaterial(data);
      if (resp.code !== 200) return;
      this.query.page = 1;
      this.handleGetMaterial();
    },
    // 素材全选按钮
    handleCheckAll() {
      this.materialList.forEach((item) => {
        item.ischecked = this.checkAll;
      });
    },
    // 批量处理按钮
    handleBatchAudit(val) {
      let obj = {
        userId: this.query.userId,
        auditVos: [],
      };
      if (val === 1) {
        this.materialList.forEach((item) => {
          if (item.ischecked) {
            obj.auditVos.push({
              creativeId: item.id,
              level: item.level,
              auditSts: "1",
            });
          }
        });
      } else if (val === 2) {
        this.materialList.forEach((item) => {
          if (item.ischecked) {
            obj.auditVos.push({
              creativeId: item.id,
              level: item.level,
              auditSts: "2",
            });
          }
        });
      } else if (val === 3) {
        this.materialList.forEach((item) => {
          if (item.ischecked) {
            obj.auditVos.push({
              creativeId: item.id,
              level: item.level,
              auditSts: "1",
            });
          } else {
            obj.auditVos.push({
              creativeId: item.id,
              level: item.level,
              auditSts: "2",
            });
          }
        });
      }
      this.auditMaterial(obj);
    },
    // 审核通过按钮
    handleResolve(item) {
      if (!this.allowOperate) return;
      let obj = {
        userId: this.userId,
        auditVos: [
          {
            creativeId: item.id,
            level: item.level,
            auditSts: "1",
          },
        ],
      };
      this.auditMaterial(obj);
    },
    // 拒绝通过按钮
    handleReject(item) {
      if (!this.allowOperate) return;
      let obj = {
        userId: this.userId,
        auditVos: [
          {
            creativeId: item.id,
            level: item.level,
            auditSts: "2",
          },
        ],
      };
      this.auditMaterial(obj);
    },
    // 关闭详情弹框
    closeDetailDialog() {
      this.detailsDialog = false;
    },
    // 点击详情按钮
    handleDetails(item) {
      this.detailsinfo = {
        creativeUrl: item.creativeUrl,
        type: item.type,
        id: item.id,
        title: item.title,
        description: item.description,
        downloadUrl: item.downloadUrl,
        landingPage: item.landingPage,
        tags: item.tags ? item.tags.split(",") : [],
        level: item.level,
        auditSts: item.auditSts,
      };
      this.detailsDialog = true;
    },
    // 详情弹框提交按钮
    async handleSumbitDetails() {
      // 修改标签
      let tags = this.detailsinfo.tags.join(",");
      let resp = await updateTags({
        id: this.detailsinfo.id,
        tags: tags,
      });
      if (resp.code !== 200) return;
      // 审核
      let obj1 = {
        userId: this.userId,
        auditVos: [
          {
            creativeId: this.detailsinfo.id,
            level: this.detailsinfo.level,
            auditSts: this.detailsinfo.auditSts,
          },
        ],
      };
      this.auditMaterial(obj1);
      this.detailsDialog = false;
      this.handleGetMaterial();
    },
    // 视频素材点击播放处理
    handlePlay(id) {
      if (!this.$refs["video" + id][0].paused) {
        this.$refs["video" + id][0].pause();
        this.$set(this.isPlay, id, false);
      } else {
        this.$refs["video" + id][0].play();
        this.$set(this.isPlay, id, true);
      }
    },
    // 打开素材等级详情弹框
    handleGrage() {
      this.gradeDialog = true;
    },
  },
};
</script>

<style lang="scss" scoped>
.audit-container {
  width: 100%;
  // margin-top: 10px;
  z-index: auto;
  background-color: #f5f5f5;
  .search {
    // margin-top: 10px;
    padding: 10px 20px 20px 20px;
    background-color: #fff;
    .search_top {
      padding: 10px 0;
    }
    .search_bottom {
      padding: 10px 0;
      span {
        font-size: 16px;
      }
    }
  }
  .material {
    .tab {
      padding: 10px 20px 0 20px;
      background-color: #fff;
      margin-top: 10px;
      display: flex;
      justify-content: space-between;
      .tab_box {
        width: 90%;
      }
      .btn {
        // margin-left: ;
      }
    }
    .batchAudit {
      padding: 10px 20px 0 20px;
      background-color: #fff;
      // margin: 15px 0;
      width: 100%;
      display: flex;
      justify-content: flex-start;
      .flex_item {
        // border: 1px solid #000;
        margin: 0 20px;
        &.number {
          // border: 1px solid #000;
          // width: 10rem;
        }
        p {
          font-size: 18px;
          line-height: 30px;
        }
        .el-checkbox {
          line-height: 30px;
        }
      }
    }
    .material_list {
      padding: 10px 20px 0 20px;
      background-color: #fff;

      width: 100%;
      height: auto;
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      .items {
        padding: 10px 10px 0 10px;

        width: 100%;
        display: flex;
        margin-bottom: 30px;
        // flex-direction: row;
        flex-wrap: wrap;
        justify-content: flex-start;
        .item {
          position: relative;

          width: 14.6rem;
          height: 555px;
          padding: 10px 2px;
          .material_box {
            box-sizing: border-box;
            width: 100%;
            height: 100%;
            border: 2px solid #ccc;
            border-radius: 5px;

            &:hover {
              border: 2px solid rgba(49, 112, 207, 0.5);
            }
            .image {
              position: relative;
              width: 100%;
              height: 75%;
              .image_box {
                height: 100%;
                width: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                // background: -moz-linear-gradient(
                //   top,
                //   rgb(189, 220, 222) 0%,
                //   #eee 100%
                // );
                // background: -webkit-linear-gradient(
                //   top,
                //   rgb(189, 220, 222) 0%,
                //   #eee 100%
                // );
                // background: -o-linear-gradient(top, rgb(189, 220, 222) 0%, #eee 100%);
                // background: -ms-linear-gradient(top, rgb(189, 220, 222) 0%, #eee 100%);
                // background: linear-gradient(to bottom, rgb(189, 220, 222) 0%, #eee 100%);
                background-color: #eee;
                img,
                video {
                  margin: 0;
                  // position: absolute;
                  // top: 0;
                  // left: 0;
                  display: inline-block;
                  width: 100%;
                  max-height: 100%;
                  z-index: 1;
                }
                img{
                  object-fit: cover;
                }
              }

              i.play {
                position: absolute;
                top: calc(50% - 30px);
                left: calc(50% - 30px);
                font-size: 60px;
                color: rgba(252, 252, 252, 0.4);
                z-index: 99;
                cursor: pointer;
                opacity: 0;
                &:hover {
                  color: rgba(252, 252, 252, 0.8);
                }
              }
              .svgicon {
                position: absolute;
                font-size: 25px;
                color: #666;
                z-index: 99;
                cursor: pointer;
                top: 15px;
                left: 20px;
              }
              .checked {
                position: absolute;
                right: 20px;
                top: 15px;
                z-index: 99;
                .el-checkbox {
                  display: inline-block;
                }
              }
              .todo {
                transition: all 0.3s;
                opacity: 0;
                position: absolute;
                bottom: 0px;
                width: 100%;
                z-index: 999;
                background-color: hsla(0, 0%, 100%, 0.8);
                cursor: pointer;
                display: flex;
                justify-content: space-around;
                &:nth-child(1) {
                  border-right: 2px solid #000;
                }
                span {
                  // &:hover {
                  //   color: #3189ff;
                  // }
                  color: #3189ff;
                  z-index: 999;
                  display: inline-block;
                  width: 30%;
                  height: 30px;
                  text-align: center;
                  line-height: 30px;
                }
              }
            }
            .uptime {
              margin: 15px 5px;
              font-size: 13px;
              span {
                p {
                  font-size: 13px;
                  display: inline-block;
                }
              }
            }
            .level {
              margin: 15px 5px;

              p {
                display: inline-block;
                font-size: 12px;
              }
            }
            .downloadUrl {
              margin-left: 2px;
              display: flex;
              // justify-content: center;
              // align-items: center;
              a {
                width: 95%;
                white-space: nowrap;
                text-overflow: ellipsis;
                overflow: hidden;
                &:hover {
                  color: rgb(49, 112, 207);
                }
              }
            }
          }
        }
      }
    }
  }
}
::v-deep.audit-container .search .cust-select-container .osicon {
  display: none;
}
.empty {
  background-color: #fff;
}
::v-deep.details .el-dialog.el-dialog--center {
  margin-bottom: 10vh;
}
.details {
  .details_box {
    position: relative;
    width: 100%;
    height: 500px;
    display: flex;
    box-sizing: border-box;
    .left {
      position: relative;
      width: 35%;
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      video,
      img {
        // width: 80%;
        max-height: 100%;
        max-width: 100%;
      }
      img {
        // height: 100%;
      }
    }
    .right {
      width: 65%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: space-around;
      .box {
        width: 85%;
        height: 100%;
        display: flex;
        flex-direction: column;
        // align-items: center;
        justify-content: space-around;
      }
      p.landingPage,
      p.description,
      p.downloadUrl {
        width: 25rem;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
        a:hover {
          color: rgb(49, 112, 207);
        }
      }
      .tags {
        display: flex;
        span {
          font-size: 14px;
          font-weight: 600;
        }
      }
      .title {
        font-weight: 600;
        font-size: 14px;
      }
    }
  }
}
::v-deep .checked .el-checkbox .el-checkbox__inner {
  width: 20px;
  height: 20px;
  font-size: 20px;
}
.checked ::v-deep .el-checkbox__inner:after {
  /* width: 20px; */
  height: 12px;
  font-weight: 700;
  border-width: 2px;
  left: 6px;
  top: 0px;
}

::v-deep.audit-container .full .fulldialog {
  background-color: rgba(256, 256, 256, 0);
  border: none;
  box-shadow: none;
  min-width: 300px !important;
  height: 100%;
  .dialogbox {
    height: 500px;
    display: flex;
    justify-content: center;
    align-items: center;
    video,
    img {
      width: 300px;
    }
  }
}
.full ::v-deep .el-dialog__headerbtn .el-dialog__close {
  color: #fff !important;
  font-size: 30px;
}
.audit-container .material .items .item:hover .todo,
.audit-container .material .items .item .image:hover i.play {
  opacity: 1 !important;
}
</style>